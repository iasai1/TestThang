<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-failsafe-plugin/xsd/failsafe-test-report.xsd" name="com.diana.integration.IntTest" time="45.093" tests="3" errors="0" skipped="0" failures="2">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.specification.version" value="11"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1251"/>
    <property name="java.class.path" value="C:\Users\ishipitc\IdeaProjects\TestThang\target\test-classes;C:\Users\ishipitc\IdeaProjects\TestThang\target\classes;C:\Users\ishipitc\.m2\repository\org\springframework\spring-context-support\5.1.9.RELEASE\spring-context-support-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-beans\5.1.9.RELEASE\spring-beans-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-context\5.1.9.RELEASE\spring-context-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-core\5.1.9.RELEASE\spring-core-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-jcl\5.1.9.RELEASE\spring-jcl-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-webmvc\5.1.9.RELEASE\spring-webmvc-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-aop\5.1.9.RELEASE\spring-aop-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-expression\5.1.9.RELEASE\spring-expression-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-web\5.1.9.RELEASE\spring-web-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-orm\5.1.9.RELEASE\spring-orm-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-jdbc\5.1.9.RELEASE\spring-jdbc-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-tx\5.1.9.RELEASE\spring-tx-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-test\5.1.9.RELEASE\spring-test-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\com\github\springtestdbunit\spring-test-dbunit\1.3.0\spring-test-dbunit-1.3.0.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\hibernate-core\5.4.3.Final\hibernate-core-5.4.3.Final.jar;C:\Users\ishipitc\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\ishipitc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ishipitc\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\ishipitc\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\ishipitc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ishipitc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ishipitc\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\ishipitc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ishipitc\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\ishipitc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ishipitc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ishipitc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ishipitc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\ishipitc\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\hibernate-ehcache\5.4.3.Final\hibernate-ehcache-5.4.3.Final.jar;C:\Users\ishipitc\.m2\repository\net\sf\ehcache\ehcache\2.10.6\ehcache-2.10.6.jar;C:\Users\ishipitc\.m2\repository\com\h2database\h2\1.4.199\h2-1.4.199.jar;C:\Users\ishipitc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-server\9.4.20.v20190813\jetty-server-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-http\9.4.20.v20190813\jetty-http-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-util\9.4.20.v20190813\jetty-util-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-io\9.4.20.v20190813\jetty-io-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-servlet\9.4.20.v20190813\jetty-servlet-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-security\9.4.20.v20190813\jetty-security-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-webapp\9.4.20.v20190813\jetty-webapp-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-xml\9.4.20.v20190813\jetty-xml-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\mockito\mockito-core\3.0.0\mockito-core-3.0.0.jar;C:\Users\ishipitc\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.10\byte-buddy-agent-1.9.10.jar;C:\Users\ishipitc\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\ishipitc\.m2\repository\org\dbunit\dbunit\2.6.0\dbunit-2.6.0.jar;C:\Users\ishipitc\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\ishipitc\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi-ooxml\3.17\poi-ooxml-3.17.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi\3.17\poi-3.17.jar;C:\Users\ishipitc\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\ishipitc\.m2\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.17\poi-ooxml-schemas-3.17.jar;C:\Users\ishipitc\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\ishipitc\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\ishipitc\.m2\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;C:\Users\ishipitc\.m2\repository\postgresql\postgresql\8.4-701.jdbc3\postgresql-8.4-701.jdbc3.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\ishipitc\.m2\repository\com\jayway\jsonpath\json-path\2.1.0\json-path-2.1.0.jar;C:\Users\ishipitc\.m2\repository\net\minidev\json-smart\2.2\json-smart-2.2.jar;C:\Users\ishipitc\.m2\repository\net\minidev\accessors-smart\1.1\accessors-smart-1.1.jar;C:\Users\ishipitc\.m2\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;C:\Users\ishipitc\.m2\repository\com\jayway\jsonpath\json-path-assert\2.4.0\json-path-assert-2.4.0.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\javax.el\3.0.1-b11\javax.el-3.0.1-b11.jar;C:\Users\ishipitc\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\ishipitc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0.pr3\jackson-core-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0.pr3\jackson-databind-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0.pr3\jackson-annotations-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\ishipitc\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-java\3.141.59\selenium-java-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-api\3.141.59\selenium-api-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\3.141.59\selenium-chrome-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\3.141.59\selenium-edge-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\3.141.59\selenium-firefox-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\3.141.59\selenium-ie-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-opera-driver\3.141.59\selenium-opera-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\3.141.59\selenium-remote-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\3.141.59\selenium-safari-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-support\3.141.59\selenium-support-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\ishipitc\.m2\repository\com\google\guava\guava\25.0-jre\guava-25.0-jre.jar;C:\Users\ishipitc\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\ishipitc\.m2\repository\org\checkerframework\checker-compat-qual\2.0.0\checker-compat-qual-2.0.0.jar;C:\Users\ishipitc\.m2\repository\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar;C:\Users\ishipitc\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\ishipitc\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;C:\Users\ishipitc\.m2\repository\com\squareup\okhttp3\okhttp\3.11.0\okhttp-3.11.0.jar;C:\Users\ishipitc\.m2\repository\com\squareup\okio\okio\1.14.0\okio-1.14.0.jar;"/>
    <property name="java.vm.vendor" value="JetBrains s.r.o"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://www.jetbrains.com/"/>
    <property name="user.timezone" value="Europe/Moscow"/>
    <property name="user.country.format" value="RU"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="os.name" value="Windows 10"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Users\ishipitc\AppData\Local\JetBrains\IntelliJ IDEA 2019.2.3\jbr\bin"/>
    <property name="sun.java.command" value="C:\Users\ishipitc\AppData\Local\Temp\surefire7332412643428917413\surefirebooter15084417956403809797.jar C:\Users\ishipitc\AppData\Local\Temp\surefire7332412643428917413 2019-10-21T11-55-33_859-jvmRun1 surefire16546966156123132071tmp surefire_07820736643780986987tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\ishipitc\IdeaProjects\TestThang\target\test-classes;C:\Users\ishipitc\IdeaProjects\TestThang\target\classes;C:\Users\ishipitc\.m2\repository\org\springframework\spring-context-support\5.1.9.RELEASE\spring-context-support-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-beans\5.1.9.RELEASE\spring-beans-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-context\5.1.9.RELEASE\spring-context-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-core\5.1.9.RELEASE\spring-core-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-jcl\5.1.9.RELEASE\spring-jcl-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-webmvc\5.1.9.RELEASE\spring-webmvc-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-aop\5.1.9.RELEASE\spring-aop-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-expression\5.1.9.RELEASE\spring-expression-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-web\5.1.9.RELEASE\spring-web-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-orm\5.1.9.RELEASE\spring-orm-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-jdbc\5.1.9.RELEASE\spring-jdbc-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-tx\5.1.9.RELEASE\spring-tx-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-test\5.1.9.RELEASE\spring-test-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\com\github\springtestdbunit\spring-test-dbunit\1.3.0\spring-test-dbunit-1.3.0.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\hibernate-core\5.4.3.Final\hibernate-core-5.4.3.Final.jar;C:\Users\ishipitc\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\ishipitc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ishipitc\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\ishipitc\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\ishipitc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ishipitc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ishipitc\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\ishipitc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ishipitc\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\ishipitc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ishipitc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ishipitc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ishipitc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\ishipitc\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\hibernate-ehcache\5.4.3.Final\hibernate-ehcache-5.4.3.Final.jar;C:\Users\ishipitc\.m2\repository\net\sf\ehcache\ehcache\2.10.6\ehcache-2.10.6.jar;C:\Users\ishipitc\.m2\repository\com\h2database\h2\1.4.199\h2-1.4.199.jar;C:\Users\ishipitc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-server\9.4.20.v20190813\jetty-server-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-http\9.4.20.v20190813\jetty-http-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-util\9.4.20.v20190813\jetty-util-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-io\9.4.20.v20190813\jetty-io-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-servlet\9.4.20.v20190813\jetty-servlet-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-security\9.4.20.v20190813\jetty-security-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-webapp\9.4.20.v20190813\jetty-webapp-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-xml\9.4.20.v20190813\jetty-xml-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\mockito\mockito-core\3.0.0\mockito-core-3.0.0.jar;C:\Users\ishipitc\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.10\byte-buddy-agent-1.9.10.jar;C:\Users\ishipitc\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\ishipitc\.m2\repository\org\dbunit\dbunit\2.6.0\dbunit-2.6.0.jar;C:\Users\ishipitc\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\ishipitc\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi-ooxml\3.17\poi-ooxml-3.17.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi\3.17\poi-3.17.jar;C:\Users\ishipitc\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\ishipitc\.m2\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.17\poi-ooxml-schemas-3.17.jar;C:\Users\ishipitc\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\ishipitc\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\ishipitc\.m2\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;C:\Users\ishipitc\.m2\repository\postgresql\postgresql\8.4-701.jdbc3\postgresql-8.4-701.jdbc3.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\ishipitc\.m2\repository\com\jayway\jsonpath\json-path\2.1.0\json-path-2.1.0.jar;C:\Users\ishipitc\.m2\repository\net\minidev\json-smart\2.2\json-smart-2.2.jar;C:\Users\ishipitc\.m2\repository\net\minidev\accessors-smart\1.1\accessors-smart-1.1.jar;C:\Users\ishipitc\.m2\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;C:\Users\ishipitc\.m2\repository\com\jayway\jsonpath\json-path-assert\2.4.0\json-path-assert-2.4.0.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\javax.el\3.0.1-b11\javax.el-3.0.1-b11.jar;C:\Users\ishipitc\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\ishipitc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0.pr3\jackson-core-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0.pr3\jackson-databind-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0.pr3\jackson-annotations-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\ishipitc\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-java\3.141.59\selenium-java-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-api\3.141.59\selenium-api-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\3.141.59\selenium-chrome-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\3.141.59\selenium-edge-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\3.141.59\selenium-firefox-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\3.141.59\selenium-ie-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-opera-driver\3.141.59\selenium-opera-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\3.141.59\selenium-remote-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\3.141.59\selenium-safari-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-support\3.141.59\selenium-support-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\ishipitc\.m2\repository\com\google\guava\guava\25.0-jre\guava-25.0-jre.jar;C:\Users\ishipitc\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\ishipitc\.m2\repository\org\checkerframework\checker-compat-qual\2.0.0\checker-compat-qual-2.0.0.jar;C:\Users\ishipitc\.m2\repository\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar;C:\Users\ishipitc\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\ishipitc\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;C:\Users\ishipitc\.m2\repository\com\squareup\okhttp3\okhttp\3.11.0\okhttp-3.11.0.jar;C:\Users\ishipitc\.m2\repository\com\squareup\okio\okio\1.14.0\okio-1.14.0.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\ishipitc"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2019-07-16"/>
    <property name="java.home" value="C:\Users\ishipitc\AppData\Local\JetBrains\IntelliJ IDEA 2019.2.3\jbr"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\ishipitc\IdeaProjects\TestThang"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="idea.version2019.2.3" value="true"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="C:\Users\ishipitc\AppData\Local\Temp\surefire7332412643428917413\surefirebooter15084417956403809797.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="11.0.4+10-b304.69"/>
    <property name="user.name" value="ishipitc"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="Cp1251"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\ishipitc\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://youtrack.jetbrains.com"/>
    <property name="java.io.tmpdir" value="C:\Users\ishipitc\AppData\Local\Temp\"/>
    <property name="java.version" value="11.0.4"/>
    <property name="user.dir" value="C:\Users\ishipitc\IdeaProjects\TestThang"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="user.language.format" value="ru"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\Users\ishipitc\AppData\Local\JetBrains\IntelliJ IDEA 2019.2.3\jbr\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\TortoiseSVN\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Users\ishipitc\AppData\Local\Microsoft\WindowsApps;C:\Users\ishipitc\AppData\Local\GitHubDesktop\bin;."/>
    <property name="java.vendor" value="JetBrains s.r.o"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vm.version" value="11.0.4+10-b304.69"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="55.0"/>
  </properties>
  <testcase name="test_goToNewDep_thenCreateDep_thenGoBack" classname="com.diana.integration.IntTest" time="14.282">
    <failure message="row count (table=departments) expected:&lt;[2]&gt; but was:&lt;[1]&gt;" type="junit.framework.ComparisonFailure"><![CDATA[junit.framework.ComparisonFailure: row count (table=departments) expected:<[2]> but was:<[1]>
]]></failure>
    <system-out><![CDATA[11:55:35.630 [main] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class com.diana.integration.IntTest]
11:55:35.634 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
11:55:35.642 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
11:55:35.650 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.diana.integration.IntTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
11:55:35.679 [main] DEBUG org.springframework.test.context.support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@1fe20588 declaringClass = 'com.diana.integration.IntTest', classes = '{class com.diana.config.IntTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
11:55:35.714 [main] INFO org.springframework.test.context.support.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1ddf84b8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1139b2f3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7a69b07, com.github.springtestdbunit.DbUnitTestExecutionListener@5e82df6a]
11:55:35.716 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.diana.integration.IntTest]
11:55:35.717 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.diana.integration.IntTest]
11:55:35.720 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.diana.integration.IntTest]
11:55:35.720 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.diana.integration.IntTest]
11:55:35.721 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.diana.integration.IntTest]
11:55:35.722 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.diana.integration.IntTest]
11:55:35.724 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.diana.integration.IntTest]
11:55:35.724 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.diana.integration.IntTest]
11:55:35.727 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@243c4f91 testClass = IntTest, testInstance = com.diana.integration.IntTest@291ae, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].
11:55:35.728 [main] DEBUG org.springframework.test.context.support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
11:55:35.729 [main] DEBUG org.springframework.test.context.support.AbstractGenericContextLoader - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
11:55:35.774 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [test]
11:55:35.774 [main] DEBUG org.springframework.test.context.support.AnnotationConfigContextLoader - Registering annotated classes: {class com.diana.config.IntTestConfig}
11:55:35.802 [main] DEBUG org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@a514af7
11:55:35.814 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
11:55:35.953 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
11:55:35.955 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
11:55:35.956 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
11:55:35.957 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
11:55:35.964 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'intTestConfig'
11:55:35.968 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSource'
11:55:36.002 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.h2.Driver
11:55:36.005 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sessionFactoryBean'
11:55:36.038 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'sessionFactoryBean' via factory method to bean named 'dataSource'
11:55:36.076 [main] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider
11:55:36.087 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
11:55:36.089 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
11:55:36.093 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
11:55:36.184 [main] INFO org.hibernate.Version - HHH000412: Hibernate Core {5.4.3.Final}
11:55:36.186 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
11:55:36.334 [main] DEBUG org.hibernate.cfg.Configuration - Building session factory using internal StandardServiceRegistryBuilder
11:55:36.339 [main] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
11:55:36.339 [main] DEBUG org.hibernate.cfg.Configuration - Building session factory using provided StandardServiceRegistry
11:55:36.355 [main] DEBUG org.hibernate.cache.internal.StrategyCreatorRegionFactoryImpl - RegionFactory impl [org.hibernate.cache.ehcache.internal.EhcacheRegionFactory] did not provide constructor accepting Properties
11:55:36.355 [main] DEBUG org.hibernate.cache.internal.StrategyCreatorRegionFactoryImpl - RegionFactory impl [org.hibernate.cache.ehcache.internal.EhcacheRegionFactory] did not provide constructor accepting Properties
11:55:36.365 [main] WARN org.hibernate.orm.deprecation - HHH020100: The Ehcache second-level cache provider for Hibernate is deprecated.  See https://hibernate.atlassian.net/browse/HHH-12441 for details.
11:55:36.366 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.ehcache.internal.EhcacheRegionFactory
11:55:36.384 [main] INFO org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
11:55:36.682 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@23a9ba52
11:55:36.683 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@23a9ba52
11:55:36.683 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@23a9ba52
11:55:36.684 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@544630b7
11:55:36.685 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3d6300e8
11:55:36.685 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@73511076
11:55:36.686 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@617fe9e1
11:55:36.687 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@617fe9e1
11:55:36.687 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@617fe9e1
11:55:36.688 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5b800468
11:55:36.688 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5b800468
11:55:36.688 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5b800468
11:55:36.690 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@60094a13
11:55:36.690 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@60094a13
11:55:36.690 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@60094a13
11:55:36.692 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@579d011c
11:55:36.692 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@579d011c
11:55:36.692 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@579d011c
11:55:36.693 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@687a762c
11:55:36.693 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@687a762c
11:55:36.694 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@687a762c
11:55:36.695 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@55e7a35c
11:55:36.695 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@55e7a35c
11:55:36.695 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@55e7a35c
11:55:36.696 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@62d363ab
11:55:36.696 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@62d363ab
11:55:36.696 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62d363ab
11:55:36.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4108fa66
11:55:36.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4108fa66
11:55:36.699 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b5bc39d
11:55:36.699 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b5bc39d
11:55:36.699 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1df98368
11:55:36.700 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1df98368
11:55:36.700 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7d61eccf
11:55:36.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1a6f2363
11:55:36.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@56b78e55
11:55:36.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@56b78e55
11:55:36.702 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4c4d362a
11:55:36.702 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4c4d362a
11:55:36.706 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@620aa4ea
11:55:36.706 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@620aa4ea
11:55:36.708 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@13006998
11:55:36.708 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@13006998
11:55:36.709 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@54afd745
11:55:36.709 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@54afd745
11:55:36.711 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@51768776
11:55:36.711 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@51768776
11:55:36.712 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d1f74b8
11:55:36.712 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d1f74b8
11:55:36.714 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@287f94b1
11:55:36.714 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@287f94b1
11:55:36.715 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5149f008
11:55:36.715 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5149f008
11:55:36.717 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@50305a
11:55:36.717 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@50305a
11:55:36.718 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@324c64cd
11:55:36.718 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@324c64cd
11:55:36.720 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7a0e1b5e
11:55:36.720 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7a0e1b5e
11:55:36.720 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7a0e1b5e
11:55:36.722 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7646731d
11:55:36.723 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5d8445d7
11:55:36.723 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d8445d7
11:55:36.723 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d8445d7
11:55:36.724 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b9267b
11:55:36.725 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@726386ed
11:55:36.725 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@726386ed
11:55:36.726 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@51650883
11:55:36.726 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51650883
11:55:36.727 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@241a53ef
11:55:36.727 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@241a53ef
11:55:36.728 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@31500940
11:55:36.728 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@31500940
11:55:36.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@200606de
11:55:36.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@200606de
11:55:36.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2ef8a8c3
11:55:36.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3aacf32a
11:55:36.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3aacf32a
11:55:36.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3aacf32a
11:55:36.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@443dbe42
11:55:36.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@443dbe42
11:55:36.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@443dbe42
11:55:36.733 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@133e019b
11:55:36.733 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2102a4d5
11:55:36.734 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1e886a5b
11:55:36.734 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1e886a5b
11:55:36.734 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1e886a5b
11:55:36.735 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3113a37
11:55:36.735 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3113a37
11:55:36.735 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3113a37
11:55:36.736 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@20312893
11:55:36.736 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@54ec8cc9
11:55:36.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@32f61a31
11:55:36.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f61a31
11:55:36.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51a06cbe
11:55:36.739 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@52d10fb8
11:55:36.739 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@52d10fb8
11:55:36.741 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@433ffad1
11:55:36.741 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@433ffad1
11:55:36.742 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ecf9fb3
11:55:36.742 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@37d3d232
11:55:36.743 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2f40a43
11:55:36.746 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6e0ff644
11:55:36.746 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6e0ff644
11:55:36.746 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2d0566ba
11:55:36.746 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@733037
11:55:36.746 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7728643a
11:55:36.747 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@320e400
11:55:36.747 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5167268
11:55:36.747 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1cfd1875
11:55:36.747 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@28c0b664
11:55:36.747 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c444798
11:55:36.768 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
11:55:36.768 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
11:55:36.769 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
11:55:36.769 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
11:55:36.769 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
11:55:36.770 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
11:55:36.771 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
11:55:36.772 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
11:55:36.772 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
11:55:36.773 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
11:55:36.773 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
11:55:36.774 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
11:55:36.774 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
11:55:36.775 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
11:55:36.782 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:h2:mem:testDB;DB_CLOSE_DELAY=-1]
11:55:36.931 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : H2
    version : 1.4.199 (2019-03-13)
      major : 1
      minor : 4
11:55:36.931 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : H2 JDBC Driver
    version : 1.4.199 (2019-03-13)
      major : 1
      minor : 4
11:55:36.931 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.1
11:55:36.952 [main] INFO org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
11:55:36.995 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
11:55:37.027 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
11:55:37.030 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@127f9161] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2bf94401]
11:55:37.072 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.diana.model.Address
11:55:37.106 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
11:55:37.109 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Address
11:55:37.112 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity com.diana.model.Address on table addresses
11:55:37.132 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(addresses), mappingColumn=id, insertable=true, updatable=true, unique=false}
11:55:37.150 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
11:55:37.151 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
11:55:37.153 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Address:id]
11:55:37.157 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
11:55:37.161 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
11:55:37.169 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([]), id, foreign, Hibernate-local--foreign generator, ...)
11:55:37.171 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(addresses), mappingColumn=city, insertable=true, updatable=true, unique=false}
11:55:37.171 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property city with lazy=false
11:55:37.171 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Address:city]
11:55:37.171 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for city
11:55:37.173 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property city
11:55:37.174 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
11:55:37.175 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(addresses), mappingColumn=employee, insertable=true, updatable=true, unique=false}
11:55:37.185 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property employee
11:55:37.185 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(addresses), mappingColumn=street, insertable=true, updatable=true, unique=false}
11:55:37.185 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property street with lazy=false
11:55:37.185 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Address:street]
11:55:37.185 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for street
11:55:37.186 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property street
11:55:37.187 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.diana.model.Department
11:55:37.187 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
11:55:37.188 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Department
11:55:37.188 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity com.diana.model.Department on table departments
11:55:37.195 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=id, insertable=true, updatable=true, unique=false}
11:55:37.196 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
11:55:37.196 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Department:id]
11:55:37.196 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
11:55:37.202 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
11:55:37.203 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
11:55:37.203 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
11:55:37.203 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=employees, insertable=true, updatable=true, unique=false}
11:55:37.207 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=null, insertable=true, updatable=true, unique=false}
11:55:37.217 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=element, insertable=true, updatable=true, unique=false}
11:55:37.218 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
11:55:37.219 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
11:55:37.220 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
11:55:37.220 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
11:55:37.220 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: com.diana.model.Department.employees
11:55:37.222 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property employees
11:55:37.223 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=name, insertable=true, updatable=true, unique=false}
11:55:37.223 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
11:55:37.223 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Department:name]
11:55:37.223 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
11:55:37.223 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
11:55:37.224 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.diana.model.Employee
11:55:37.225 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
11:55:37.225 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Employee
11:55:37.225 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity com.diana.model.Employee on table employees
11:55:37.227 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employees), mappingColumn=id, insertable=true, updatable=true, unique=false}
11:55:37.228 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
11:55:37.228 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Employee:id]
11:55:37.229 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
11:55:37.229 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
11:55:37.229 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
11:55:37.229 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='department_id', referencedColumn='', mappedBy=''}
11:55:37.229 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employees), mappingColumn=department, insertable=true, updatable=true, unique=false}
11:55:37.230 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property department
11:55:37.230 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employees), mappingColumn=name, insertable=true, updatable=true, unique=false}
11:55:37.230 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
11:55:37.230 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Employee:name]
11:55:37.231 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
11:55:37.231 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
11:55:37.231 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employees), mappingColumn=phone, insertable=true, updatable=true, unique=false}
11:55:37.231 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property phone with lazy=false
11:55:37.231 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Employee:phone]
11:55:37.231 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for phone
11:55:37.231 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property phone
11:55:37.235 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
11:55:37.235 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for city
11:55:37.235 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for street
11:55:37.235 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
11:55:37.235 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
11:55:37.235 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
11:55:37.235 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
11:55:37.235 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for phone
11:55:37.245 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [employee_id] to be non-null as it is part of the primary key for table [addresses]
11:55:37.245 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [departments]
11:55:37.245 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [employees]
11:55:37.245 [main] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: com.diana.model.Department.employees
11:55:37.246 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding a OneToMany: com.diana.model.Department.employees through a foreign key
11:55:37.247 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Mapping collection: com.diana.model.Department.employees -> employees
11:55:37.248 [main] DEBUG org.hibernate.cfg.annotations.TableBinder - Retrieving property com.diana.model.Employee.department
11:55:37.248 [main] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: department_id, one-to-many: com.diana.model.Employee
11:55:37.248 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: com.diana.model.Employee
11:55:37.250 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: com.diana.model.Department
11:55:37.252 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: com.diana.model.Employee
11:55:37.252 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: com.diana.model.Department
11:55:37.281 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
11:55:37.282 [main] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
11:55:37.282 [main] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - Statistics: enabled
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
11:55:37.283 [main] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache: enabled
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardTimestampsCacheFactory@763cf5b9
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 15
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: enabled
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): enabled
11:55:37.284 [main] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
11:55:37.285 [main] DEBUG org.hibernate.cfg.Settings - Connection release mode: ON_CLOSE
11:55:37.285 [main] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
11:55:37.285 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : 
11:55:37.285 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : 
11:55:37.285 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : 
11:55:37.285 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : 
11:55:37.342 [main] WARN net.sf.ehcache.config.ConfigurationFactory - No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/ishipitc/.m2/repository/net/sf/ehcache/ehcache/2.10.6/ehcache-2.10.6.jar!/ehcache-failsafe.xml
11:55:37.343 [main] DEBUG net.sf.ehcache.config.ConfigurationFactory - Configuring ehcache from URL: jar:file:/C:/Users/ishipitc/.m2/repository/net/sf/ehcache/ehcache/2.10.6/ehcache-2.10.6.jar!/ehcache-failsafe.xml
11:55:37.344 [main] DEBUG net.sf.ehcache.config.ConfigurationFactory - Configuring ehcache from InputStream
11:55:37.430 [main] DEBUG net.sf.ehcache.config.BeanHandler - Ignoring ehcache attribute xmlns:xsi
11:55:37.430 [main] DEBUG net.sf.ehcache.config.BeanHandler - Ignoring ehcache attribute xsi:noNamespaceSchemaLocation
11:55:37.434 [main] DEBUG net.sf.ehcache.config.DiskStoreConfiguration - Disk Store Path: C:\Users\ishipitc\AppData\Local\Temp\
11:55:37.457 [main] DEBUG net.sf.ehcache.util.PropertyUtil - propertiesString is null.
11:55:37.468 [main] DEBUG net.sf.ehcache.config.ConfigurationHelper - No CacheManagerEventListenerFactory class specified. Skipping...
11:55:37.517 [main] DEBUG net.sf.ehcache.Cache - No BootstrapCacheLoaderFactory class specified. Skipping...
11:55:37.517 [main] DEBUG net.sf.ehcache.Cache - CacheWriter factory not configured. Skipping...
11:55:37.517 [main] DEBUG net.sf.ehcache.config.ConfigurationHelper - No CacheExceptionHandlerFactory class specified. Skipping...
11:55:37.533 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
11:55:37.533 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1cf0cacc, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\ishipitc\IdeaProjects\TestThang\target\test-classes;C:\Users\ishipitc\IdeaProjects\TestThang\target\classes;C:\Users\ishipitc\.m2\repository\org\springframework\spring-context-support\5.1.9.RELEASE\spring-context-support-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-beans\5.1.9.RELEASE\spring-beans-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-context\5.1.9.RELEASE\spring-context-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-core\5.1.9.RELEASE\spring-core-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-jcl\5.1.9.RELEASE\spring-jcl-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-webmvc\5.1.9.RELEASE\spring-webmvc-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-aop\5.1.9.RELEASE\spring-aop-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-expression\5.1.9.RELEASE\spring-expression-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-web\5.1.9.RELEASE\spring-web-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-orm\5.1.9.RELEASE\spring-orm-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-jdbc\5.1.9.RELEASE\spring-jdbc-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-tx\5.1.9.RELEASE\spring-tx-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-test\5.1.9.RELEASE\spring-test-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\com\github\springtestdbunit\spring-test-dbunit\1.3.0\spring-test-dbunit-1.3.0.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\hibernate-core\5.4.3.Final\hibernate-core-5.4.3.Final.jar;C:\Users\ishipitc\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\ishipitc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ishipitc\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\ishipitc\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\ishipitc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ishipitc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ishipitc\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\ishipitc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ishipitc\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\ishipitc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ishipitc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ishipitc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ishipitc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\ishipitc\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\hibernate-ehcache\5.4.3.Final\hibernate-ehcache-5.4.3.Final.jar;C:\Users\ishipitc\.m2\repository\net\sf\ehcache\ehcache\2.10.6\ehcache-2.10.6.jar;C:\Users\ishipitc\.m2\repository\com\h2database\h2\1.4.199\h2-1.4.199.jar;C:\Users\ishipitc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-server\9.4.20.v20190813\jetty-server-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-http\9.4.20.v20190813\jetty-http-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-util\9.4.20.v20190813\jetty-util-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-io\9.4.20.v20190813\jetty-io-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-servlet\9.4.20.v20190813\jetty-servlet-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-security\9.4.20.v20190813\jetty-security-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-webapp\9.4.20.v20190813\jetty-webapp-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-xml\9.4.20.v20190813\jetty-xml-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\mockito\mockito-core\3.0.0\mockito-core-3.0.0.jar;C:\Users\ishipitc\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.10\byte-buddy-agent-1.9.10.jar;C:\Users\ishipitc\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\ishipitc\.m2\repository\org\dbunit\dbunit\2.6.0\dbunit-2.6.0.jar;C:\Users\ishipitc\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\ishipitc\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi-ooxml\3.17\poi-ooxml-3.17.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi\3.17\poi-3.17.jar;C:\Users\ishipitc\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\ishipitc\.m2\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.17\poi-ooxml-schemas-3.17.jar;C:\Users\ishipitc\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\ishipitc\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\ishipitc\.m2\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;C:\Users\ishipitc\.m2\repository\postgresql\postgresql\8.4-701.jdbc3\postgresql-8.4-701.jdbc3.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\ishipitc\.m2\repository\com\jayway\jsonpath\json-path\2.1.0\json-path-2.1.0.jar;C:\Users\ishipitc\.m2\repository\net\minidev\json-smart\2.2\json-smart-2.2.jar;C:\Users\ishipitc\.m2\repository\net\minidev\accessors-smart\1.1\accessors-smart-1.1.jar;C:\Users\ishipitc\.m2\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;C:\Users\ishipitc\.m2\repository\com\jayway\jsonpath\json-path-assert\2.4.0\json-path-assert-2.4.0.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\javax.el\3.0.1-b11\javax.el-3.0.1-b11.jar;C:\Users\ishipitc\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\ishipitc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0.pr3\jackson-core-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0.pr3\jackson-databind-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0.pr3\jackson-annotations-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\ishipitc\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-java\3.141.59\selenium-java-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-api\3.141.59\selenium-api-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\3.141.59\selenium-chrome-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\3.141.59\selenium-edge-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\3.141.59\selenium-firefox-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\3.141.59\selenium-ie-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-opera-driver\3.141.59\selenium-opera-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\3.141.59\selenium-remote-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\3.141.59\selenium-safari-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-support\3.141.59\selenium-support-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\ishipitc\.m2\repository\com\google\guava\guava\25.0-jre\guava-25.0-jre.jar;C:\Users\ishipitc\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\ishipitc\.m2\repository\org\checkerframework\checker-compat-qual\2.0.0\checker-compat-qual-2.0.0.jar;C:\Users\ishipitc\.m2\repository\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar;C:\Users\ishipitc\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\ishipitc\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;C:\Users\ishipitc\.m2\repository\com\squareup\okhttp3\okhttp\3.11.0\okhttp-3.11.0.jar;C:\Users\ishipitc\.m2\repository\com\squareup\okio\okio\1.14.0\okio-1.14.0.jar;, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Moscow, user.country.format=RU, os.name=Windows 10, java.vm.specification.version=11, hibernate.generate_statistics=true, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\ishipitc\AppData\Local\JetBrains\IntelliJ IDEA 2019.2.3\jbr\bin, sun.java.command=C:\Users\ishipitc\AppData\Local\Temp\surefire7332412643428917413\surefirebooter15084417956403809797.jar C:\Users\ishipitc\AppData\Local\Temp\surefire7332412643428917413 2019-10-21T11-55-33_859-jvmRun1 surefire16546966156123132071tmp surefire_07820736643780986987tmp, jdk.debug=release, spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect, surefire.test.class.path=C:\Users\ishipitc\IdeaProjects\TestThang\target\test-classes;C:\Users\ishipitc\IdeaProjects\TestThang\target\classes;C:\Users\ishipitc\.m2\repository\org\springframework\spring-context-support\5.1.9.RELEASE\spring-context-support-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-beans\5.1.9.RELEASE\spring-beans-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-context\5.1.9.RELEASE\spring-context-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-core\5.1.9.RELEASE\spring-core-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-jcl\5.1.9.RELEASE\spring-jcl-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-webmvc\5.1.9.RELEASE\spring-webmvc-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-aop\5.1.9.RELEASE\spring-aop-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-expression\5.1.9.RELEASE\spring-expression-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-web\5.1.9.RELEASE\spring-web-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-orm\5.1.9.RELEASE\spring-orm-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-jdbc\5.1.9.RELEASE\spring-jdbc-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-tx\5.1.9.RELEASE\spring-tx-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-test\5.1.9.RELEASE\spring-test-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\com\github\springtestdbunit\spring-test-dbunit\1.3.0\spring-test-dbunit-1.3.0.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\hibernate-core\5.4.3.Final\hibernate-core-5.4.3.Final.jar;C:\Users\ishipitc\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\ishipitc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ishipitc\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\ishipitc\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\ishipitc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ishipitc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ishipitc\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\ishipitc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ishipitc\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\ishipitc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ishipitc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ishipitc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ishipitc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\ishipitc\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\hibernate-ehcache\5.4.3.Final\hibernate-ehcache-5.4.3.Final.jar;C:\Users\ishipitc\.m2\repository\net\sf\ehcache\ehcache\2.10.6\ehcache-2.10.6.jar;C:\Users\ishipitc\.m2\repository\com\h2database\h2\1.4.199\h2-1.4.199.jar;C:\Users\ishipitc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-server\9.4.20.v20190813\jetty-server-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-http\9.4.20.v20190813\jetty-http-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-util\9.4.20.v20190813\jetty-util-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-io\9.4.20.v20190813\jetty-io-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-servlet\9.4.20.v20190813\jetty-servlet-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-security\9.4.20.v20190813\jetty-security-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-webapp\9.4.20.v20190813\jetty-webapp-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-xml\9.4.20.v20190813\jetty-xml-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\mockito\mockito-core\3.0.0\mockito-core-3.0.0.jar;C:\Users\ishipitc\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.10\byte-buddy-agent-1.9.10.jar;C:\Users\ishipitc\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\ishipitc\.m2\repository\org\dbunit\dbunit\2.6.0\dbunit-2.6.0.jar;C:\Users\ishipitc\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\ishipitc\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi-ooxml\3.17\poi-ooxml-3.17.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi\3.17\poi-3.17.jar;C:\Users\ishipitc\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\ishipitc\.m2\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.17\poi-ooxml-schemas-3.17.jar;C:\Users\ishipitc\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\ishipitc\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\ishipitc\.m2\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;C:\Users\ishipitc\.m2\repository\postgresql\postgresql\8.4-701.jdbc3\postgresql-8.4-701.jdbc3.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\ishipitc\.m2\repository\com\jayway\jsonpath\json-path\2.1.0\json-path-2.1.0.jar;C:\Users\ishipitc\.m2\repository\net\minidev\json-smart\2.2\json-smart-2.2.jar;C:\Users\ishipitc\.m2\repository\net\minidev\accessors-smart\1.1\accessors-smart-1.1.jar;C:\Users\ishipitc\.m2\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;C:\Users\ishipitc\.m2\repository\com\jayway\jsonpath\json-path-assert\2.4.0\json-path-assert-2.4.0.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\javax.el\3.0.1-b11\javax.el-3.0.1-b11.jar;C:\Users\ishipitc\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\ishipitc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0.pr3\jackson-core-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0.pr3\jackson-databind-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0.pr3\jackson-annotations-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\ishipitc\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-java\3.141.59\selenium-java-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-api\3.141.59\selenium-api-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\3.141.59\selenium-chrome-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\3.141.59\selenium-edge-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\3.141.59\selenium-firefox-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\3.141.59\selenium-ie-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-opera-driver\3.141.59\selenium-opera-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\3.141.59\selenium-remote-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\3.141.59\selenium-safari-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-support\3.141.59\selenium-support-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\ishipitc\.m2\repository\com\google\guava\guava\25.0-jre\guava-25.0-jre.jar;C:\Users\ishipitc\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\ishipitc\.m2\repository\org\checkerframework\checker-compat-qual\2.0.0\checker-compat-qual-2.0.0.jar;C:\Users\ishipitc\.m2\repository\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar;C:\Users\ishipitc\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\ishipitc\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;C:\Users\ishipitc\.m2\repository\com\squareup\okhttp3\okhttp\3.11.0\okhttp-3.11.0.jar;C:\Users\ishipitc\.m2\repository\com\squareup\okio\okio\1.14.0\okio-1.14.0.jar;, sun.cpu.endian=little, user.home=C:\Users\ishipitc, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=C:\Users\ishipitc\AppData\Local\JetBrains\IntelliJ IDEA 2019.2.3\jbr, file.separator=\, basedir=C:\Users\ishipitc\IdeaProjects\TestThang, java.vm.compressedOopsMode=Zero based, line.separator=
, idea.version2019.2.3=true, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory, surefire.real.class.path=C:\Users\ishipitc\AppData\Local\Temp\surefire7332412643428917413\surefirebooter15084417956403809797.jar, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+10-b304.69, user.name=ishipitc, path.separator=;, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, file.encoding=Cp1251, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@8bcc55f], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, localRepository=C:\Users\ishipitc\.m2\repository, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\ishipitc\AppData\Local\Temp\, java.version=11.0.4, user.dir=C:\Users\ishipitc\IdeaProjects\TestThang, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, user.language.format=ru, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4f5b08d, hibernate.cache.use_second_level_cache=true, java.library.path=C:\Users\ishipitc\AppData\Local\JetBrains\IntelliJ IDEA 2019.2.3\jbr\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\TortoiseSVN\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Users\ishipitc\AppData\Local\Microsoft\WindowsApps;C:\Users\ishipitc\AppData\Local\GitHubDesktop\bin;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+10-b304.69, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@6f8e8894, java.class.version=55.0}
11:55:37.576 [main] INFO org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.17.Final
11:55:37.593 [main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
11:55:37.594 [main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
11:55:37.599 [main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
11:55:37.600 [main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
11:55:37.600 [main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
11:55:37.601 [main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
11:55:37.812 [main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
11:55:37.818 [main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
11:55:37.818 [main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
11:55:37.819 [main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
11:55:37.819 [main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
11:55:37.819 [main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
11:55:37.821 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Address] is safe
11:55:37.821 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Address
11:55:37.887 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Employee] is safe
11:55:37.887 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Employee
11:55:37.894 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Department] is safe
11:55:37.894 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Department
11:55:37.904 [main] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
11:55:37.906 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
11:55:37.906 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@127f9161] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@550e9be6]
11:55:37.936 [main] WARN org.hibernate.orm.cache - HHH90001006: Missing cache[com.diana.model.Department] was created on-the-fly. The created cache will use a provider-specific default configuration: make sure you defined one. You can disable this warning by setting 'hibernate.cache.ehcache.missing_cache_strategy' to 'create'.
11:55:37.953 [main] WARN net.sf.ehcache.DiskStorePathManager - diskStorePath 'C:\Users\ishipitc\AppData\Local\Temp' is already used by an existing CacheManager either in the same VM or in a different process.
The diskStore path for this CacheManager will be set to C:\Users\ishipitc\AppData\Local\Temp\ehcache_auto_created17221218353735091608diskstore.
To avoid this warning consider using the CacheManager factory methods to create a singleton CacheManager or specifying a separate ehcache configuration (ehcache.xml) for each CacheManager instance.
11:55:37.953 [main] DEBUG net.sf.ehcache.DiskStorePathManager - Using diskstore path C:\Users\ishipitc\AppData\Local\Temp\ehcache_auto_created17221218353735091608diskstore
11:55:37.953 [main] DEBUG net.sf.ehcache.DiskStorePathManager - Holding exclusive lock on C:\Users\ishipitc\AppData\Local\Temp\ehcache_auto_created17221218353735091608diskstore\.ehcache-diskstore.lock
11:55:37.953 [main] DEBUG net.sf.ehcache.store.disk.DiskStorageFactory - Failed to delete file com%002ediana%002emodel%002e%0044epartment.data
11:55:37.954 [main] DEBUG net.sf.ehcache.store.disk.DiskStorageFactory - Failed to delete file com%002ediana%002emodel%002e%0044epartment.index
11:55:37.960 [main] DEBUG net.sf.ehcache.store.disk.DiskStorageFactory - Matching data file missing (or empty) for index file. Deleting index file C:\Users\ishipitc\AppData\Local\Temp\ehcache_auto_created17221218353735091608diskstore\com%002ediana%002emodel%002e%0044epartment.index
11:55:37.960 [main] DEBUG net.sf.ehcache.store.disk.DiskStorageFactory - Failed to delete file com%002ediana%002emodel%002e%0044epartment.index
11:55:38.007 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE
11:55:38.008 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE_BYTES
11:55:38.009 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: WRITER_QUEUE_LENGTH
11:55:38.010 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: REMOTE_SIZE
11:55:38.010 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: LAST_REJOIN_TIMESTAMP
11:55:38.024 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: OFFHEAP_GET
11:55:38.026 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: OFFHEAP_PUT
11:55:38.027 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: OFFHEAP_REMOVE
11:55:38.028 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: XA_COMMIT
11:55:38.029 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: XA_ROLLBACK
11:55:38.029 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: XA_RECOVERY
11:55:38.030 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: CLUSTER_EVENT
11:55:38.030 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: NONSTOP
11:55:38.036 [main] DEBUG net.sf.ehcache.Cache - Initialised cache: com.diana.model.Department
11:55:38.036 [main] DEBUG net.sf.ehcache.config.ConfigurationHelper - CacheDecoratorFactory not configured for defaultCache. Skipping for 'com.diana.model.Department'.
11:55:38.037 [main] DEBUG org.hibernate.cache.spi.support.DomainDataRegionTemplate - Generating entity cache access [read-only] : NavigableRole[com.diana.model.Department]
11:55:38.040 [main] WARN org.hibernate.orm.cache - HHH90001003: Read-only caching was requested for mutable entity [NavigableRole[com.diana.model.Department]]
11:55:38.041 [main] WARN org.hibernate.orm.cache - HHH90001006: Missing cache[com.diana.model.Employee] was created on-the-fly. The created cache will use a provider-specific default configuration: make sure you defined one. You can disable this warning by setting 'hibernate.cache.ehcache.missing_cache_strategy' to 'create'.
11:55:38.044 [main] DEBUG net.sf.ehcache.store.disk.DiskStorageFactory - Failed to delete file com%002ediana%002emodel%002e%0045mployee.data
11:55:38.044 [main] DEBUG net.sf.ehcache.store.disk.DiskStorageFactory - Failed to delete file com%002ediana%002emodel%002e%0045mployee.index
11:55:38.046 [main] DEBUG net.sf.ehcache.store.disk.DiskStorageFactory - Matching data file missing (or empty) for index file. Deleting index file C:\Users\ishipitc\AppData\Local\Temp\ehcache_auto_created17221218353735091608diskstore\com%002ediana%002emodel%002e%0045mployee.index
11:55:38.046 [main] DEBUG net.sf.ehcache.store.disk.DiskStorageFactory - Failed to delete file com%002ediana%002emodel%002e%0045mployee.index
11:55:38.049 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE
11:55:38.049 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE_BYTES
11:55:38.049 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: WRITER_QUEUE_LENGTH
11:55:38.050 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: REMOTE_SIZE
11:55:38.050 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: LAST_REJOIN_TIMESTAMP
11:55:38.051 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: OFFHEAP_GET
11:55:38.051 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: OFFHEAP_PUT
11:55:38.051 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: OFFHEAP_REMOVE
11:55:38.052 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: XA_COMMIT
11:55:38.053 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: XA_ROLLBACK
11:55:38.053 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: XA_RECOVERY
11:55:38.054 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: CLUSTER_EVENT
11:55:38.054 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: NONSTOP
11:55:38.056 [main] DEBUG net.sf.ehcache.Cache - Initialised cache: com.diana.model.Employee
11:55:38.057 [main] DEBUG net.sf.ehcache.config.ConfigurationHelper - CacheDecoratorFactory not configured for defaultCache. Skipping for 'com.diana.model.Employee'.
11:55:38.057 [main] DEBUG org.hibernate.cache.spi.support.DomainDataRegionTemplate - Generating entity cache access [read-only] : NavigableRole[com.diana.model.Employee]
11:55:38.057 [main] WARN org.hibernate.orm.cache - HHH90001003: Read-only caching was requested for mutable entity [NavigableRole[com.diana.model.Employee]]
11:55:38.058 [main] WARN org.hibernate.orm.cache - HHH90001006: Missing cache[com.diana.model.Address] was created on-the-fly. The created cache will use a provider-specific default configuration: make sure you defined one. You can disable this warning by setting 'hibernate.cache.ehcache.missing_cache_strategy' to 'create'.
11:55:38.062 [main] DEBUG net.sf.ehcache.store.disk.DiskStorageFactory - Failed to delete file com%002ediana%002emodel%002e%0041ddress.data
11:55:38.062 [main] DEBUG net.sf.ehcache.store.disk.DiskStorageFactory - Failed to delete file com%002ediana%002emodel%002e%0041ddress.index
11:55:38.063 [main] DEBUG net.sf.ehcache.store.disk.DiskStorageFactory - Matching data file missing (or empty) for index file. Deleting index file C:\Users\ishipitc\AppData\Local\Temp\ehcache_auto_created17221218353735091608diskstore\com%002ediana%002emodel%002e%0041ddress.index
11:55:38.064 [main] DEBUG net.sf.ehcache.store.disk.DiskStorageFactory - Failed to delete file com%002ediana%002emodel%002e%0041ddress.index
11:55:38.067 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE
11:55:38.067 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE_BYTES
11:55:38.067 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: WRITER_QUEUE_LENGTH
11:55:38.067 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: REMOTE_SIZE
11:55:38.068 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Pass-Through Statistic: LAST_REJOIN_TIMESTAMP
11:55:38.069 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: OFFHEAP_GET
11:55:38.069 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: OFFHEAP_PUT
11:55:38.069 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: OFFHEAP_REMOVE
11:55:38.070 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: XA_COMMIT
11:55:38.070 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: XA_ROLLBACK
11:55:38.071 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: XA_RECOVERY
11:55:38.071 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: CLUSTER_EVENT
11:55:38.072 [main] DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl - Mocking Operation Statistic: NONSTOP
11:55:38.075 [main] DEBUG net.sf.ehcache.Cache - Initialised cache: com.diana.model.Address
11:55:38.075 [main] DEBUG net.sf.ehcache.config.ConfigurationHelper - CacheDecoratorFactory not configured for defaultCache. Skipping for 'com.diana.model.Address'.
11:55:38.076 [main] DEBUG org.hibernate.cache.spi.support.DomainDataRegionTemplate - Generating entity cache access [read-only] : NavigableRole[com.diana.model.Address]
11:55:38.077 [main] WARN org.hibernate.orm.cache - HHH90001003: Read-only caching was requested for mutable entity [NavigableRole[com.diana.model.Address]]
11:55:38.116 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Address] is safe
11:55:38.116 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Address
11:55:38.134 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Address] is safe
11:55:38.134 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Address
11:55:38.383 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Employee] is safe
11:55:38.383 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Employee
11:55:38.383 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Employee] is safe
11:55:38.383 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Employee
11:55:38.400 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Department] is safe
11:55:38.400 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Department
11:55:38.400 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Department] is safe
11:55:38.400 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Department
11:55:38.425 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: com.diana.model.Department.employees
11:55:38.425 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update employees set department_id=? where id=?
11:55:38.425 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update employees set  where id=?
11:55:38.425 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update employees set department_id=null where department_id=? and id=?
11:55:38.425 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update employees set department_id=null where department_id=?
11:55:38.430 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.diana.model.Address
11:55:38.430 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select employee_id from addresses where employee_id =?
11:55:38.430 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select address_.employee_id, address_.city as city1_0_, address_.street as street2_0_ from addresses address_ where address_.employee_id=?
11:55:38.430 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into addresses (city, street, employee_id) values (?, ?, ?)
11:55:38.430 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update addresses set city=?, street=? where employee_id=?
11:55:38.430 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from addresses where employee_id=?
11:55:38.449 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e4b9c4]
11:55:38.450 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : city
11:55:38.450 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : employee
11:55:38.452 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Property path deemed to be circular : employee
11:55:38.454 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : street
11:55:38.454 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:55:38.464 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:55:38.468 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.diana.model.Address)
    - Returns
       - EntityReturnImpl(entity=com.diana.model.Address, querySpaceUid=<gen:0>, path=com.diana.model.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.diana.model.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {employee3_0_0_}

11:55:38.470 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.diana.model.Address [NONE]: select address0_.employee_id as employee3_0_0_, address0_.city as city1_0_0_, address0_.street as street2_0_0_ from addresses address0_ where address0_.employee_id=?
11:55:38.470 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27898e13]
11:55:38.470 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : city
11:55:38.470 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : employee
11:55:38.470 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Property path deemed to be circular : employee
11:55:38.470 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : street
11:55:38.470 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:55:38.470 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:55:38.471 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.diana.model.Address)
    - Returns
       - EntityReturnImpl(entity=com.diana.model.Address, querySpaceUid=<gen:0>, path=com.diana.model.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.diana.model.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {employee3_0_0_}

11:55:38.471 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.diana.model.Address [READ]: select address0_.employee_id as employee3_0_0_, address0_.city as city1_0_0_, address0_.street as street2_0_0_ from addresses address0_ where address0_.employee_id=?
11:55:38.482 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.diana.model.Address: select address0_.employee_id as employee3_0_0_, address0_.city as city1_0_0_, address0_.street as street2_0_0_ from addresses address0_ where address0_.employee_id=?
11:55:38.482 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.diana.model.Address: select address0_.employee_id as employee3_0_0_, address0_.city as city1_0_0_, address0_.street as street2_0_0_ from addresses address0_ where address0_.employee_id=?
11:55:38.484 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.diana.model.Employee
11:55:38.484 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from employees where id =?
11:55:38.484 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select employee_.id, employee_.department_id as departme4_2_, employee_.name as name2_2_, employee_.phone as phone3_2_ from employees employee_ where employee_.id=?
11:55:38.484 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into employees (department_id, name, phone, id) values (?, ?, ?, ?)
11:55:38.484 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update employees set department_id=?, name=?, phone=? where id=?
11:55:38.484 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from employees where id=?
11:55:38.484 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into employees (id, department_id, name, phone) values (null, ?, ?, ?)
11:55:38.484 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@629075f4]
11:55:38.484 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : department
11:55:38.485 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61d60e38]
11:55:38.485 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
11:55:38.485 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
11:55:38.485 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:55:38.486 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:55:38.486 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.diana.model.Employee)
    - Returns
       - EntityReturnImpl(entity=com.diana.model.Employee, querySpaceUid=<gen:0>, path=com.diana.model.Employee)
          - EntityAttributeFetchImpl(entity=com.diana.model.Department, querySpaceUid=<gen:1>, path=com.diana.model.Employee.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.diana.model.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

11:55:38.486 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.diana.model.Employee [NONE]: select employee0_.id as id1_2_0_, employee0_.department_id as departme4_2_0_, employee0_.name as name2_2_0_, employee0_.phone as phone3_2_0_ from employees employee0_ where employee0_.id=?
11:55:38.486 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c9fdb64]
11:55:38.486 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : department
11:55:38.486 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c3b6963]
11:55:38.486 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
11:55:38.486 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
11:55:38.486 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:55:38.486 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:55:38.487 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.diana.model.Employee)
    - Returns
       - EntityReturnImpl(entity=com.diana.model.Employee, querySpaceUid=<gen:0>, path=com.diana.model.Employee)
          - EntityAttributeFetchImpl(entity=com.diana.model.Department, querySpaceUid=<gen:1>, path=com.diana.model.Employee.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.diana.model.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

11:55:38.487 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.diana.model.Employee [READ]: select employee0_.id as id1_2_0_, employee0_.department_id as departme4_2_0_, employee0_.name as name2_2_0_, employee0_.phone as phone3_2_0_ from employees employee0_ where employee0_.id=?
11:55:38.487 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.diana.model.Employee: select employee0_.id as id1_2_0_, employee0_.department_id as departme4_2_0_, employee0_.name as name2_2_0_, employee0_.phone as phone3_2_0_ from employees employee0_ where employee0_.id=?
11:55:38.487 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.diana.model.Employee: select employee0_.id as id1_2_0_, employee0_.department_id as departme4_2_0_, employee0_.name as name2_2_0_, employee0_.phone as phone3_2_0_ from employees employee0_ where employee0_.id=?
11:55:38.487 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.diana.model.Department
11:55:38.487 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from departments where id =?
11:55:38.487 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select department_.id, department_.name as name2_1_ from departments department_ where department_.id=?
11:55:38.487 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into departments (name, id) values (?, ?)
11:55:38.487 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update departments set name=? where id=?
11:55:38.487 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from departments where id=?
11:55:38.487 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into departments (id, name) values (null, ?)
11:55:38.488 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7364f68]
11:55:38.488 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : employees
11:55:38.488 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21274afe]
11:55:38.489 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c29356]
11:55:38.490 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
11:55:38.490 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:55:38.490 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:55:38.490 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.diana.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.diana.model.Department, querySpaceUid=<gen:0>, path=com.diana.model.Department)
          - CollectionAttributeFetchImpl(collection=com.diana.model.Department.employees, querySpaceUid=<gen:1>, path=com.diana.model.Department.employees)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.diana.model.Employee, querySpaceUid=<gen:2>, path=com.diana.model.Department.employees.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.diana.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

11:55:38.491 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.diana.model.Department [NONE]: select department0_.id as id1_1_0_, department0_.name as name2_1_0_ from departments department0_ where department0_.id=?
11:55:38.491 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f71195]
11:55:38.491 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : employees
11:55:38.491 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6238d5e0]
11:55:38.491 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@336f49a1]
11:55:38.491 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
11:55:38.491 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:55:38.491 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:55:38.491 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.diana.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.diana.model.Department, querySpaceUid=<gen:0>, path=com.diana.model.Department)
          - CollectionAttributeFetchImpl(collection=com.diana.model.Department.employees, querySpaceUid=<gen:1>, path=com.diana.model.Department.employees)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.diana.model.Employee, querySpaceUid=<gen:2>, path=com.diana.model.Department.employees.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.diana.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

11:55:38.491 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.diana.model.Department [READ]: select department0_.id as id1_1_0_, department0_.name as name2_1_0_ from departments department0_ where department0_.id=?
11:55:38.493 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.diana.model.Department: select department0_.id as id1_1_1_, department0_.name as name2_1_1_, employees1_.department_id as departme4_2_3_, employees1_.id as id1_2_3_, employees1_.id as id1_2_0_, employees1_.department_id as departme4_2_0_, employees1_.name as name2_2_0_, employees1_.phone as phone3_2_0_ from departments department0_ left outer join employees employees1_ on department0_.id=employees1_.department_id where department0_.id=?
11:55:38.494 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.diana.model.Department: select department0_.id as id1_1_1_, department0_.name as name2_1_1_, employees1_.department_id as departme4_2_3_, employees1_.id as id1_2_3_, employees1_.id as id1_2_0_, employees1_.department_id as departme4_2_0_, employees1_.name as name2_2_0_, employees1_.phone as phone3_2_0_ from departments department0_ left outer join employees employees1_ on department0_.id=employees1_.department_id where department0_.id=?
11:55:38.497 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3de79067]
11:55:38.498 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eb85a47]
11:55:38.499 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : department
11:55:38.499 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Property path deemed to be circular : department
11:55:38.499 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
11:55:38.499 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
11:55:38.499 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:55:38.512 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:55:38.515 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(collection=com.diana.model.Department.employees)
    - Returns
       - CollectionReturnImpl(collection=com.diana.model.Department.employees, querySpaceUid=<gen:0>, path=[com.diana.model.Department.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.diana.model.Employee, querySpaceUid=<gen:1>, path=[com.diana.model.Department.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.diana.model.Department.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {departme4_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.diana.model.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

11:55:38.518 [main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader - Static select for collection com.diana.model.Department.employees: select employees0_.department_id as departme4_2_0_, employees0_.id as id1_2_0_, employees0_.id as id1_2_1_, employees0_.department_id as departme4_2_1_, employees0_.name as name2_2_1_, employees0_.phone as phone3_2_1_ from employees employees0_ where employees0_.department_id=?
11:55:38.580 [main] DEBUG org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
11:55:38.582 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
11:55:38.583 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
11:55:38.589 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
11:55:38.590 [main] INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
11:55:38.594 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
11:55:38.594 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
11:55:38.595 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@74123110
11:55:38.596 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 23d13ead-dcb5-4a10-a242-4c8b2407a9d0 (<unnamed>)
11:55:38.596 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
11:55:38.596 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'entityManagerFactory'
11:55:38.597 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'dataSource'
11:55:38.646 [main] DEBUG org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
11:55:38.651 [main] DEBUG org.hibernate.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@8bcc55f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@6f8e8894
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ishipitc/IdeaProjects/TestThang/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.diana.model.Address
		com.diana.model.Department
		com.diana.model.Employee]
	Mapping files names []
	Properties []
11:55:38.652 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
11:55:38.652 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
11:55:38.652 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
11:55:38.655 [main] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
11:55:38.656 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[class org.hibernate.cache.ehcache.internal.SingletonEhcacheRegionFactory, class org.hibernate.cache.ehcache.internal.EhcacheRegionFactory]` RegionFactory strategies were registered
11:55:38.657 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
11:55:38.658 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@23a9ba52
11:55:38.658 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@23a9ba52
11:55:38.659 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@23a9ba52
11:55:38.659 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@544630b7
11:55:38.659 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3d6300e8
11:55:38.659 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@73511076
11:55:38.659 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@617fe9e1
11:55:38.659 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@617fe9e1
11:55:38.659 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@617fe9e1
11:55:38.659 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5b800468
11:55:38.659 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5b800468
11:55:38.659 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5b800468
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@60094a13
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@60094a13
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@60094a13
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@579d011c
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@579d011c
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@579d011c
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@687a762c
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@687a762c
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@687a762c
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@55e7a35c
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@55e7a35c
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@55e7a35c
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@62d363ab
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@62d363ab
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62d363ab
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4108fa66
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4108fa66
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b5bc39d
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b5bc39d
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1df98368
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1df98368
11:55:38.660 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7d61eccf
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1a6f2363
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@56b78e55
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@56b78e55
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4c4d362a
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4c4d362a
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@620aa4ea
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@620aa4ea
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@13006998
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@13006998
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@54afd745
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@54afd745
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@51768776
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@51768776
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d1f74b8
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d1f74b8
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@287f94b1
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@287f94b1
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5149f008
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5149f008
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@50305a
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@50305a
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@324c64cd
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@324c64cd
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7a0e1b5e
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7a0e1b5e
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7a0e1b5e
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7646731d
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5d8445d7
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d8445d7
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d8445d7
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b9267b
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@726386ed
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@726386ed
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@51650883
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51650883
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@241a53ef
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@241a53ef
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@31500940
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@31500940
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@200606de
11:55:38.661 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@200606de
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2ef8a8c3
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3aacf32a
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3aacf32a
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3aacf32a
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@443dbe42
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@443dbe42
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@443dbe42
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@133e019b
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2102a4d5
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1e886a5b
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1e886a5b
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1e886a5b
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3113a37
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3113a37
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3113a37
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@20312893
11:55:38.662 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@54ec8cc9
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@32f61a31
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f61a31
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51a06cbe
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@52d10fb8
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@52d10fb8
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@433ffad1
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@433ffad1
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ecf9fb3
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@37d3d232
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2f40a43
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6e0ff644
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6e0ff644
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@37d699a1
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f42b194
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@8eb6f9a
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@29170a47
11:55:38.663 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2a8f8555
11:55:38.664 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@402b4f81
11:55:38.664 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@13ef7fa1
11:55:38.664 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@23b1aa9
11:55:38.666 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6c07add6] into BootstrapContext; was [null]
11:55:38.666 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6c07add6) [was null]
11:55:38.667 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1b17d8ab] into BootstrapContext; was [null]
11:55:38.667 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7f6b7426] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@687eb455]
11:55:38.715 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6c07add6]
11:55:38.715 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6c07add6]
11:55:38.715 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
11:55:38.715 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
11:55:38.715 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
11:55:38.715 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
11:55:38.715 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
11:55:38.716 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
11:55:38.716 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
11:55:38.716 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
11:55:38.716 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
11:55:38.716 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
11:55:38.716 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
11:55:38.716 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
11:55:38.716 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
11:55:38.716 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
11:55:38.716 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:h2:mem:testDB;DB_CLOSE_DELAY=-1]
11:55:38.717 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : H2
    version : 1.4.199 (2019-03-13)
      major : 1
      minor : 4
11:55:38.717 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : H2 JDBC Driver
    version : 1.4.199 (2019-03-13)
      major : 1
      minor : 4
11:55:38.717 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.1
11:55:38.717 [main] INFO org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
11:55:38.719 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
11:55:38.726 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
11:55:38.727 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d1a859c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@28554ac8]
11:55:38.728 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.diana.model.Address
11:55:38.728 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
11:55:38.728 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Address
11:55:38.728 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity com.diana.model.Address on table addresses
11:55:38.729 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(addresses), mappingColumn=id, insertable=true, updatable=true, unique=false}
11:55:38.729 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
11:55:38.729 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
11:55:38.730 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Address:id]
11:55:38.730 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
11:55:38.730 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
11:55:38.730 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([]), id, foreign, Hibernate-local--foreign generator, ...)
11:55:38.730 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(addresses), mappingColumn=city, insertable=true, updatable=true, unique=false}
11:55:38.730 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property city with lazy=false
11:55:38.730 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Address:city]
11:55:38.730 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for city
11:55:38.730 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property city
11:55:38.730 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
11:55:38.731 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(addresses), mappingColumn=employee, insertable=true, updatable=true, unique=false}
11:55:38.731 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property employee
11:55:38.731 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(addresses), mappingColumn=street, insertable=true, updatable=true, unique=false}
11:55:38.731 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property street with lazy=false
11:55:38.731 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Address:street]
11:55:38.731 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for street
11:55:38.731 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property street
11:55:38.732 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.diana.model.Department
11:55:38.732 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
11:55:38.732 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Department
11:55:38.732 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity com.diana.model.Department on table departments
11:55:38.733 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=id, insertable=true, updatable=true, unique=false}
11:55:38.733 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
11:55:38.733 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Department:id]
11:55:38.733 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
11:55:38.733 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
11:55:38.733 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
11:55:38.734 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
11:55:38.734 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=employees, insertable=true, updatable=true, unique=false}
11:55:38.734 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=null, insertable=true, updatable=true, unique=false}
11:55:38.734 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=element, insertable=true, updatable=true, unique=false}
11:55:38.734 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
11:55:38.734 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
11:55:38.734 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
11:55:38.734 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
11:55:38.734 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: com.diana.model.Department.employees
11:55:38.735 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property employees
11:55:38.735 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=name, insertable=true, updatable=true, unique=false}
11:55:38.735 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
11:55:38.735 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Department:name]
11:55:38.735 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
11:55:38.735 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
11:55:38.735 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.diana.model.Employee
11:55:38.735 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
11:55:38.735 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Employee
11:55:38.735 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity com.diana.model.Employee on table employees
11:55:38.736 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employees), mappingColumn=id, insertable=true, updatable=true, unique=false}
11:55:38.736 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
11:55:38.736 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Employee:id]
11:55:38.736 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
11:55:38.736 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
11:55:38.736 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
11:55:38.736 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='department_id', referencedColumn='', mappedBy=''}
11:55:38.736 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employees), mappingColumn=department, insertable=true, updatable=true, unique=false}
11:55:38.736 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property department
11:55:38.737 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employees), mappingColumn=name, insertable=true, updatable=true, unique=false}
11:55:38.737 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
11:55:38.737 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Employee:name]
11:55:38.737 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
11:55:38.737 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
11:55:38.737 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employees), mappingColumn=phone, insertable=true, updatable=true, unique=false}
11:55:38.737 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property phone with lazy=false
11:55:38.737 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.diana.model.Employee:phone]
11:55:38.737 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for phone
11:55:38.737 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property phone
11:55:38.738 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
11:55:38.739 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for city
11:55:38.739 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for street
11:55:38.739 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
11:55:38.739 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
11:55:38.739 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
11:55:38.739 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
11:55:38.739 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for phone
11:55:38.739 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [employee_id] to be non-null as it is part of the primary key for table [addresses]
11:55:38.740 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [departments]
11:55:38.740 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [employees]
11:55:38.740 [main] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: com.diana.model.Department.employees
11:55:38.740 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding a OneToMany: com.diana.model.Department.employees through a foreign key
11:55:38.740 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Mapping collection: com.diana.model.Department.employees -> employees
11:55:38.740 [main] DEBUG org.hibernate.cfg.annotations.TableBinder - Retrieving property com.diana.model.Employee.department
11:55:38.740 [main] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: department_id, one-to-many: com.diana.model.Employee
11:55:38.740 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: com.diana.model.Employee
11:55:38.741 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: com.diana.model.Department
11:55:38.742 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: com.diana.model.Employee
11:55:38.743 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: com.diana.model.Department
11:55:38.746 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 15
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: enabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): enabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Connection release mode: ON_CLOSE
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : 
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : 
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : 
11:55:38.746 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : 
11:55:38.751 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
11:55:38.751 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\ishipitc\IdeaProjects\TestThang\target\test-classes;C:\Users\ishipitc\IdeaProjects\TestThang\target\classes;C:\Users\ishipitc\.m2\repository\org\springframework\spring-context-support\5.1.9.RELEASE\spring-context-support-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-beans\5.1.9.RELEASE\spring-beans-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-context\5.1.9.RELEASE\spring-context-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-core\5.1.9.RELEASE\spring-core-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-jcl\5.1.9.RELEASE\spring-jcl-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-webmvc\5.1.9.RELEASE\spring-webmvc-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-aop\5.1.9.RELEASE\spring-aop-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-expression\5.1.9.RELEASE\spring-expression-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-web\5.1.9.RELEASE\spring-web-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-orm\5.1.9.RELEASE\spring-orm-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-jdbc\5.1.9.RELEASE\spring-jdbc-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-tx\5.1.9.RELEASE\spring-tx-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-test\5.1.9.RELEASE\spring-test-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\com\github\springtestdbunit\spring-test-dbunit\1.3.0\spring-test-dbunit-1.3.0.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\hibernate-core\5.4.3.Final\hibernate-core-5.4.3.Final.jar;C:\Users\ishipitc\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\ishipitc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ishipitc\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\ishipitc\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\ishipitc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ishipitc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ishipitc\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\ishipitc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ishipitc\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\ishipitc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ishipitc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ishipitc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ishipitc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\ishipitc\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\hibernate-ehcache\5.4.3.Final\hibernate-ehcache-5.4.3.Final.jar;C:\Users\ishipitc\.m2\repository\net\sf\ehcache\ehcache\2.10.6\ehcache-2.10.6.jar;C:\Users\ishipitc\.m2\repository\com\h2database\h2\1.4.199\h2-1.4.199.jar;C:\Users\ishipitc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-server\9.4.20.v20190813\jetty-server-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-http\9.4.20.v20190813\jetty-http-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-util\9.4.20.v20190813\jetty-util-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-io\9.4.20.v20190813\jetty-io-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-servlet\9.4.20.v20190813\jetty-servlet-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-security\9.4.20.v20190813\jetty-security-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-webapp\9.4.20.v20190813\jetty-webapp-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-xml\9.4.20.v20190813\jetty-xml-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\mockito\mockito-core\3.0.0\mockito-core-3.0.0.jar;C:\Users\ishipitc\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.10\byte-buddy-agent-1.9.10.jar;C:\Users\ishipitc\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\ishipitc\.m2\repository\org\dbunit\dbunit\2.6.0\dbunit-2.6.0.jar;C:\Users\ishipitc\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\ishipitc\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi-ooxml\3.17\poi-ooxml-3.17.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi\3.17\poi-3.17.jar;C:\Users\ishipitc\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\ishipitc\.m2\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.17\poi-ooxml-schemas-3.17.jar;C:\Users\ishipitc\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\ishipitc\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\ishipitc\.m2\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;C:\Users\ishipitc\.m2\repository\postgresql\postgresql\8.4-701.jdbc3\postgresql-8.4-701.jdbc3.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\ishipitc\.m2\repository\com\jayway\jsonpath\json-path\2.1.0\json-path-2.1.0.jar;C:\Users\ishipitc\.m2\repository\net\minidev\json-smart\2.2\json-smart-2.2.jar;C:\Users\ishipitc\.m2\repository\net\minidev\accessors-smart\1.1\accessors-smart-1.1.jar;C:\Users\ishipitc\.m2\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;C:\Users\ishipitc\.m2\repository\com\jayway\jsonpath\json-path-assert\2.4.0\json-path-assert-2.4.0.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\javax.el\3.0.1-b11\javax.el-3.0.1-b11.jar;C:\Users\ishipitc\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\ishipitc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0.pr3\jackson-core-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0.pr3\jackson-databind-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0.pr3\jackson-annotations-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\ishipitc\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-java\3.141.59\selenium-java-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-api\3.141.59\selenium-api-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\3.141.59\selenium-chrome-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\3.141.59\selenium-edge-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\3.141.59\selenium-firefox-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\3.141.59\selenium-ie-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-opera-driver\3.141.59\selenium-opera-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\3.141.59\selenium-remote-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\3.141.59\selenium-safari-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-support\3.141.59\selenium-support-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\ishipitc\.m2\repository\com\google\guava\guava\25.0-jre\guava-25.0-jre.jar;C:\Users\ishipitc\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\ishipitc\.m2\repository\org\checkerframework\checker-compat-qual\2.0.0\checker-compat-qual-2.0.0.jar;C:\Users\ishipitc\.m2\repository\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar;C:\Users\ishipitc\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\ishipitc\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;C:\Users\ishipitc\.m2\repository\com\squareup\okhttp3\okhttp\3.11.0\okhttp-3.11.0.jar;C:\Users\ishipitc\.m2\repository\com\squareup\okio\okio\1.14.0\okio-1.14.0.jar;, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Moscow, user.country.format=RU, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\ishipitc\AppData\Local\JetBrains\IntelliJ IDEA 2019.2.3\jbr\bin, sun.java.command=C:\Users\ishipitc\AppData\Local\Temp\surefire7332412643428917413\surefirebooter15084417956403809797.jar C:\Users\ishipitc\AppData\Local\Temp\surefire7332412643428917413 2019-10-21T11-55-33_859-jvmRun1 surefire16546966156123132071tmp surefire_07820736643780986987tmp, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, surefire.test.class.path=C:\Users\ishipitc\IdeaProjects\TestThang\target\test-classes;C:\Users\ishipitc\IdeaProjects\TestThang\target\classes;C:\Users\ishipitc\.m2\repository\org\springframework\spring-context-support\5.1.9.RELEASE\spring-context-support-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-beans\5.1.9.RELEASE\spring-beans-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-context\5.1.9.RELEASE\spring-context-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-core\5.1.9.RELEASE\spring-core-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-jcl\5.1.9.RELEASE\spring-jcl-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-webmvc\5.1.9.RELEASE\spring-webmvc-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-aop\5.1.9.RELEASE\spring-aop-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-expression\5.1.9.RELEASE\spring-expression-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-web\5.1.9.RELEASE\spring-web-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-orm\5.1.9.RELEASE\spring-orm-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-jdbc\5.1.9.RELEASE\spring-jdbc-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-tx\5.1.9.RELEASE\spring-tx-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\org\springframework\spring-test\5.1.9.RELEASE\spring-test-5.1.9.RELEASE.jar;C:\Users\ishipitc\.m2\repository\com\github\springtestdbunit\spring-test-dbunit\1.3.0\spring-test-dbunit-1.3.0.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\hibernate-core\5.4.3.Final\hibernate-core-5.4.3.Final.jar;C:\Users\ishipitc\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\ishipitc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ishipitc\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\ishipitc\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\ishipitc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ishipitc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ishipitc\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\ishipitc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ishipitc\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\ishipitc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ishipitc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ishipitc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ishipitc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\ishipitc\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\ishipitc\.m2\repository\org\hibernate\hibernate-ehcache\5.4.3.Final\hibernate-ehcache-5.4.3.Final.jar;C:\Users\ishipitc\.m2\repository\net\sf\ehcache\ehcache\2.10.6\ehcache-2.10.6.jar;C:\Users\ishipitc\.m2\repository\com\h2database\h2\1.4.199\h2-1.4.199.jar;C:\Users\ishipitc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-server\9.4.20.v20190813\jetty-server-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-http\9.4.20.v20190813\jetty-http-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-util\9.4.20.v20190813\jetty-util-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-io\9.4.20.v20190813\jetty-io-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-servlet\9.4.20.v20190813\jetty-servlet-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-security\9.4.20.v20190813\jetty-security-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-webapp\9.4.20.v20190813\jetty-webapp-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\eclipse\jetty\jetty-xml\9.4.20.v20190813\jetty-xml-9.4.20.v20190813.jar;C:\Users\ishipitc\.m2\repository\org\mockito\mockito-core\3.0.0\mockito-core-3.0.0.jar;C:\Users\ishipitc\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.10\byte-buddy-agent-1.9.10.jar;C:\Users\ishipitc\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\ishipitc\.m2\repository\org\dbunit\dbunit\2.6.0\dbunit-2.6.0.jar;C:\Users\ishipitc\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\ishipitc\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi-ooxml\3.17\poi-ooxml-3.17.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi\3.17\poi-3.17.jar;C:\Users\ishipitc\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\ishipitc\.m2\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;C:\Users\ishipitc\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.17\poi-ooxml-schemas-3.17.jar;C:\Users\ishipitc\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\ishipitc\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\ishipitc\.m2\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;C:\Users\ishipitc\.m2\repository\postgresql\postgresql\8.4-701.jdbc3\postgresql-8.4-701.jdbc3.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\ishipitc\.m2\repository\com\jayway\jsonpath\json-path\2.1.0\json-path-2.1.0.jar;C:\Users\ishipitc\.m2\repository\net\minidev\json-smart\2.2\json-smart-2.2.jar;C:\Users\ishipitc\.m2\repository\net\minidev\accessors-smart\1.1\accessors-smart-1.1.jar;C:\Users\ishipitc\.m2\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;C:\Users\ishipitc\.m2\repository\com\jayway\jsonpath\json-path-assert\2.4.0\json-path-assert-2.4.0.jar;C:\Users\ishipitc\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\ishipitc\.m2\repository\org\glassfish\javax.el\3.0.1-b11\javax.el-3.0.1-b11.jar;C:\Users\ishipitc\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\ishipitc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0.pr3\jackson-core-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0.pr3\jackson-databind-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0.pr3\jackson-annotations-2.10.0.pr3.jar;C:\Users\ishipitc\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\ishipitc\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-java\3.141.59\selenium-java-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-api\3.141.59\selenium-api-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\3.141.59\selenium-chrome-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\3.141.59\selenium-edge-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\3.141.59\selenium-firefox-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\3.141.59\selenium-ie-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-opera-driver\3.141.59\selenium-opera-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\3.141.59\selenium-remote-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\3.141.59\selenium-safari-driver-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\seleniumhq\selenium\selenium-support\3.141.59\selenium-support-3.141.59.jar;C:\Users\ishipitc\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\ishipitc\.m2\repository\com\google\guava\guava\25.0-jre\guava-25.0-jre.jar;C:\Users\ishipitc\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\ishipitc\.m2\repository\org\checkerframework\checker-compat-qual\2.0.0\checker-compat-qual-2.0.0.jar;C:\Users\ishipitc\.m2\repository\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar;C:\Users\ishipitc\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\ishipitc\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;C:\Users\ishipitc\.m2\repository\com\squareup\okhttp3\okhttp\3.11.0\okhttp-3.11.0.jar;C:\Users\ishipitc\.m2\repository\com\squareup\okio\okio\1.14.0\okio-1.14.0.jar;, sun.cpu.endian=little, user.home=C:\Users\ishipitc, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=C:\Users\ishipitc\AppData\Local\JetBrains\IntelliJ IDEA 2019.2.3\jbr, file.separator=\, basedir=C:\Users\ishipitc\IdeaProjects\TestThang, java.vm.compressedOopsMode=Zero based, line.separator=
, idea.version2019.2.3=true, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=C:\Users\ishipitc\AppData\Local\Temp\surefire7332412643428917413\surefirebooter15084417956403809797.jar, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+10-b304.69, user.name=ishipitc, path.separator=;, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, file.encoding=Cp1251, hibernate.ejb.persistenceUnitName=default, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, localRepository=C:\Users\ishipitc\.m2\repository, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\ishipitc\AppData\Local\Temp\, java.version=11.0.4, user.dir=C:\Users\ishipitc\IdeaProjects\TestThang, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, user.language.format=ru, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@147efd9, java.library.path=C:\Users\ishipitc\AppData\Local\JetBrains\IntelliJ IDEA 2019.2.3\jbr\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\TortoiseSVN\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Users\ishipitc\AppData\Local\Microsoft\WindowsApps;C:\Users\ishipitc\AppData\Local\GitHubDesktop\bin;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+10-b304.69, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@6f8e8894, java.class.version=55.0}
11:55:38.752 [main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
11:55:38.752 [main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
11:55:38.753 [main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
11:55:38.753 [main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
11:55:38.753 [main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
11:55:38.754 [main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
11:55:38.763 [main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
11:55:38.764 [main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
11:55:38.764 [main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
11:55:38.764 [main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
11:55:38.764 [main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
11:55:38.764 [main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
11:55:38.764 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Address] is safe
11:55:38.764 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Address
11:55:38.771 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Employee] is safe
11:55:38.771 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Employee
11:55:38.778 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Department] is safe
11:55:38.778 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Department
11:55:38.783 [main] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
11:55:38.783 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
11:55:38.783 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d1a859c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@60928a61]
11:55:38.784 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Address] is safe
11:55:38.784 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Address
11:55:38.784 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Address] is safe
11:55:38.784 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Address
11:55:38.786 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Employee] is safe
11:55:38.786 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Employee
11:55:38.786 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Employee] is safe
11:55:38.786 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Employee
11:55:38.787 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Department] is safe
11:55:38.787 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Department
11:55:38.787 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.diana.model.Department] is safe
11:55:38.788 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.diana.model.Department
11:55:38.789 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: com.diana.model.Department.employees
11:55:38.789 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update employees set department_id=? where id=?
11:55:38.789 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update employees set  where id=?
11:55:38.789 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update employees set department_id=null where department_id=? and id=?
11:55:38.789 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update employees set department_id=null where department_id=?
11:55:38.789 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.diana.model.Address
11:55:38.789 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select employee_id from addresses where employee_id =?
11:55:38.790 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select address_.employee_id, address_.city as city1_0_, address_.street as street2_0_ from addresses address_ where address_.employee_id=?
11:55:38.790 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into addresses (city, street, employee_id) values (?, ?, ?)
11:55:38.790 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update addresses set city=?, street=? where employee_id=?
11:55:38.790 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from addresses where employee_id=?
11:55:38.790 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cd8d029]
11:55:38.790 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : city
11:55:38.790 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : employee
11:55:38.790 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Property path deemed to be circular : employee
11:55:38.790 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : street
11:55:38.791 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:55:38.791 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:55:38.791 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.diana.model.Address)
    - Returns
       - EntityReturnImpl(entity=com.diana.model.Address, querySpaceUid=<gen:0>, path=com.diana.model.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.diana.model.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {employee3_0_0_}

11:55:38.791 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.diana.model.Address [NONE]: select address0_.employee_id as employee3_0_0_, address0_.city as city1_0_0_, address0_.street as street2_0_0_ from addresses address0_ where address0_.employee_id=?
11:55:38.791 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e8f2094]
11:55:38.791 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : city
11:55:38.791 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : employee
11:55:38.791 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Property path deemed to be circular : employee
11:55:38.792 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : street
11:55:38.792 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:55:38.792 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:55:38.792 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.diana.model.Address)
    - Returns
       - EntityReturnImpl(entity=com.diana.model.Address, querySpaceUid=<gen:0>, path=com.diana.model.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.diana.model.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {employee3_0_0_}

11:55:38.792 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.diana.model.Address [READ]: select address0_.employee_id as employee3_0_0_, address0_.city as city1_0_0_, address0_.street as street2_0_0_ from addresses address0_ where address0_.employee_id=?
11:55:38.792 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.diana.model.Address: select address0_.employee_id as employee3_0_0_, address0_.city as city1_0_0_, address0_.street as street2_0_0_ from addresses address0_ where address0_.employee_id=?
11:55:38.793 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.diana.model.Address: select address0_.employee_id as employee3_0_0_, address0_.city as city1_0_0_, address0_.street as street2_0_0_ from addresses address0_ where address0_.employee_id=?
11:55:38.793 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.diana.model.Employee
11:55:38.793 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from employees where id =?
11:55:38.793 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select employee_.id, employee_.department_id as departme4_2_, employee_.name as name2_2_, employee_.phone as phone3_2_ from employees employee_ where employee_.id=?
11:55:38.793 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into employees (department_id, name, phone, id) values (?, ?, ?, ?)
11:55:38.793 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update employees set department_id=?, name=?, phone=? where id=?
11:55:38.793 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from employees where id=?
11:55:38.793 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into employees (id, department_id, name, phone) values (null, ?, ?, ?)
11:55:38.793 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d108406]
11:55:38.793 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : department
11:55:38.793 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e00837f]
11:55:38.793 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
11:55:38.793 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
11:55:38.793 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:55:38.794 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:55:38.794 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.diana.model.Employee)
    - Returns
       - EntityReturnImpl(entity=com.diana.model.Employee, querySpaceUid=<gen:0>, path=com.diana.model.Employee)
          - EntityAttributeFetchImpl(entity=com.diana.model.Department, querySpaceUid=<gen:1>, path=com.diana.model.Employee.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.diana.model.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

11:55:38.794 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.diana.model.Employee [NONE]: select employee0_.id as id1_2_0_, employee0_.department_id as departme4_2_0_, employee0_.name as name2_2_0_, employee0_.phone as phone3_2_0_ from employees employee0_ where employee0_.id=?
11:55:38.794 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63e4484d]
11:55:38.794 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : department
11:55:38.794 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77663cd7]
11:55:38.794 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
11:55:38.794 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
11:55:38.794 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:55:38.795 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:55:38.795 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.diana.model.Employee)
    - Returns
       - EntityReturnImpl(entity=com.diana.model.Employee, querySpaceUid=<gen:0>, path=com.diana.model.Employee)
          - EntityAttributeFetchImpl(entity=com.diana.model.Department, querySpaceUid=<gen:1>, path=com.diana.model.Employee.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.diana.model.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

11:55:38.795 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.diana.model.Employee [READ]: select employee0_.id as id1_2_0_, employee0_.department_id as departme4_2_0_, employee0_.name as name2_2_0_, employee0_.phone as phone3_2_0_ from employees employee0_ where employee0_.id=?
11:55:38.795 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.diana.model.Employee: select employee0_.id as id1_2_0_, employee0_.department_id as departme4_2_0_, employee0_.name as name2_2_0_, employee0_.phone as phone3_2_0_ from employees employee0_ where employee0_.id=?
11:55:38.795 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.diana.model.Employee: select employee0_.id as id1_2_0_, employee0_.department_id as departme4_2_0_, employee0_.name as name2_2_0_, employee0_.phone as phone3_2_0_ from employees employee0_ where employee0_.id=?
11:55:38.796 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.diana.model.Department
11:55:38.796 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from departments where id =?
11:55:38.796 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select department_.id, department_.name as name2_1_ from departments department_ where department_.id=?
11:55:38.796 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into departments (name, id) values (?, ?)
11:55:38.796 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update departments set name=? where id=?
11:55:38.796 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from departments where id=?
11:55:38.796 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into departments (id, name) values (null, ?)
11:55:38.796 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d17423f]
11:55:38.796 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : employees
11:55:38.796 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@582dcd35]
11:55:38.796 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e6bd263]
11:55:38.796 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
11:55:38.796 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:55:38.796 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:55:38.797 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.diana.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.diana.model.Department, querySpaceUid=<gen:0>, path=com.diana.model.Department)
          - CollectionAttributeFetchImpl(collection=com.diana.model.Department.employees, querySpaceUid=<gen:1>, path=com.diana.model.Department.employees)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.diana.model.Employee, querySpaceUid=<gen:2>, path=com.diana.model.Department.employees.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.diana.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

11:55:38.797 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.diana.model.Department [NONE]: select department0_.id as id1_1_0_, department0_.name as name2_1_0_ from departments department0_ where department0_.id=?
11:55:38.797 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@394a6d2b]
11:55:38.797 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : employees
11:55:38.797 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55adcf9e]
11:55:38.797 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1515f782]
11:55:38.797 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
11:55:38.797 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:55:38.797 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:55:38.798 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.diana.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.diana.model.Department, querySpaceUid=<gen:0>, path=com.diana.model.Department)
          - CollectionAttributeFetchImpl(collection=com.diana.model.Department.employees, querySpaceUid=<gen:1>, path=com.diana.model.Department.employees)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.diana.model.Employee, querySpaceUid=<gen:2>, path=com.diana.model.Department.employees.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.diana.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

11:55:38.798 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.diana.model.Department [READ]: select department0_.id as id1_1_0_, department0_.name as name2_1_0_ from departments department0_ where department0_.id=?
11:55:38.798 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.diana.model.Department: select department0_.id as id1_1_1_, department0_.name as name2_1_1_, employees1_.department_id as departme4_2_3_, employees1_.id as id1_2_3_, employees1_.id as id1_2_0_, employees1_.department_id as departme4_2_0_, employees1_.name as name2_2_0_, employees1_.phone as phone3_2_0_ from departments department0_ left outer join employees employees1_ on department0_.id=employees1_.department_id where department0_.id=?
11:55:38.798 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.diana.model.Department: select department0_.id as id1_1_1_, department0_.name as name2_1_1_, employees1_.department_id as departme4_2_3_, employees1_.id as id1_2_3_, employees1_.id as id1_2_0_, employees1_.department_id as departme4_2_0_, employees1_.name as name2_2_0_, employees1_.phone as phone3_2_0_ from departments department0_ left outer join employees employees1_ on department0_.id=employees1_.department_id where department0_.id=?
11:55:38.799 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f5ce33e]
11:55:38.799 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@638afcaa]
11:55:38.799 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : department
11:55:38.799 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Property path deemed to be circular : department
11:55:38.799 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
11:55:38.799 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
11:55:38.799 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:55:38.799 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:55:38.800 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(collection=com.diana.model.Department.employees)
    - Returns
       - CollectionReturnImpl(collection=com.diana.model.Department.employees, querySpaceUid=<gen:0>, path=[com.diana.model.Department.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.diana.model.Employee, querySpaceUid=<gen:1>, path=[com.diana.model.Department.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.diana.model.Department.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {departme4_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.diana.model.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

11:55:38.800 [main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader - Static select for collection com.diana.model.Department.employees: select employees0_.department_id as departme4_2_0_, employees0_.id as id1_2_0_, employees0_.id as id1_2_1_, employees0_.department_id as departme4_2_1_, employees0_.name as name2_2_1_, employees0_.phone as phone3_2_1_ from employees employees0_ where employees0_.department_id=?
11:55:38.831 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:h2:mem:testDB;DB_CLOSE_DELAY=-1]
11:55:38.942 [main] DEBUG org.hibernate.SQL - create table addresses (city varchar(255), street varchar(255), employee_id bigint not null, primary key (employee_id))
Hibernate: create table addresses (city varchar(255), street varchar(255), employee_id bigint not null, primary key (employee_id))
11:55:39.044 [main] DEBUG org.hibernate.SQL - create table departments (id bigint generated by default as identity, name varchar(255), primary key (id))
Hibernate: create table departments (id bigint generated by default as identity, name varchar(255), primary key (id))
11:55:39.071 [main] DEBUG org.hibernate.SQL - create table employees (id bigint generated by default as identity, name varchar(255), phone varchar(255), department_id bigint, primary key (id))
Hibernate: create table employees (id bigint generated by default as identity, name varchar(255), phone varchar(255), department_id bigint, primary key (id))
11:55:39.077 [main] DEBUG org.hibernate.SQL - alter table addresses add constraint FKn245yk1j248vwb8sxdcsu6eao foreign key (employee_id) references employees
Hibernate: alter table addresses add constraint FKn245yk1j248vwb8sxdcsu6eao foreign key (employee_id) references employees
11:55:39.084 [main] DEBUG org.hibernate.SQL - alter table employees add constraint FKgy4qe3dnqrm3ktd76sxp7n4c2 foreign key (department_id) references departments
Hibernate: alter table employees add constraint FKgy4qe3dnqrm3ktd76sxp7n4c2 foreign key (department_id) references departments
11:55:39.093 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
11:55:39.094 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
11:55:39.114 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
11:55:39.115 [main] INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
11:55:39.115 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
11:55:39.115 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
11:55:39.115 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: d1553000-59df-44f9-b3bd-0362cc04621c (<unnamed>)
11:55:39.115 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
11:55:39.115 [main] INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
11:55:39.127 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
11:55:39.129 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'entityManagerFactory'
11:55:39.189 [main] DEBUG org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Storing ApplicationContext in cache under key [[MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
11:55:39.189 [main] DEBUG org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@749baa0c size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]
11:55:39.215 [main] DEBUG com.github.springtestdbunit.DbUnitTestExecutionListener - Preparing test instance class com.diana.integration.IntTest for DBUnit
11:55:39.228 [main] DEBUG org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
11:55:39.228 [main] DEBUG org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@749baa0c size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]
11:55:39.228 [main] DEBUG org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
11:55:39.229 [main] DEBUG org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@749baa0c size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]
11:55:39.230 [main] DEBUG org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
11:55:39.230 [main] DEBUG org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@749baa0c size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]
11:55:39.230 [main] DEBUG com.github.springtestdbunit.DbUnitTestExecutionListener - DBUnit tests will run using databaseConnection "dataSource", datasets will be loaded using class com.github.springtestdbunit.dataset.FlatXmlDataSetLoader
11:55:39.231 [main] DEBUG org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
11:55:39.232 [main] DEBUG org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@749baa0c size = 1, maxSize = 32, parentContextCount = 0, hitCount = 4, missCount = 1]
11:55:39.381 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=true, caseSensitiveTableNames=false, metaDataSet=null]
11:55:39.381 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=true, caseSensitiveTableNames=false, metaDataSet=null]
11:55:39.389 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
11:55:39.391 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
11:55:39.391 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
11:55:39.392 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
11:55:39.392 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
11:55:39.394 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@a826ff8, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@71f0806b) - start
11:55:39.394 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@a826ff8, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@71f0806b) - start
11:55:39.397 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c33008f) - start
11:55:39.397 [main] DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start
11:55:39.397 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=departments, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c33008f) - start
11:55:39.397 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:39.397 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=departments) - start
11:55:39.397 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.397 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.397 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=departments, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c33008f) - start
11:55:39.423 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)]) - start
11:55:39.423 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=departments, object=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:39.424 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.424 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.424 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:39.424 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:39.432 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:39.432 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.432 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.432 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:39.433 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:39.433 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:39.433 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.434 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.434 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=departments) - start
11:55:39.434 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=employees, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c33008f) - start
11:55:39.434 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:39.434 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=employees) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.435 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=employees, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c33008f) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)]) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=employees, object=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - end - result=EMPLOYEES
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.435 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=phone) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=department_id) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.436 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=employees) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=addresses, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c33008f) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=addresses) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.436 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=addresses, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c33008f) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)]) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=addresses, object=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.436 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=city) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=street) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=employee_id) - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:39.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.437 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.437 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=addresses) - start
11:55:39.437 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
11:55:39.437 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:39.437 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.437 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.437 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=departments, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:39.444 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=employees, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - end - result=EMPLOYEES
11:55:39.444 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=asd) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=asd) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=addresses, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:39.444 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:39.444 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start
11:55:39.445 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments, employees, addresses], _tableMap={EMPLOYEES=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], ADDRESSES=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
11:55:39.445 [main] DEBUG com.github.springtestdbunit.DbUnitTestExecutionListener - Executing Setup of @DatabaseTest using CLEAN_INSERT on [AbstractDataSet[_orderedTableNameMap=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments, employees, addresses], _tableMap={EMPLOYEES=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], ADDRESSES=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]]]
11:55:39.446 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
11:55:39.446 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
11:55:39.446 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
11:55:39.446 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.446 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.446 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.446 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.446 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.446 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.447 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:39.447 [main] DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false], combine=true) - start
11:55:39.447 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.447 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.447 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=departments, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:39.447 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.447 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.447 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:39.447 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:39.447 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:39.447 [main] DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments], _tableMap={DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false], combine=true) - start
11:55:39.447 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.447 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.447 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=employees, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - start
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - end - result=EMPLOYEES
11:55:39.448 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:39.448 [main] DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments, employees], _tableMap={EMPLOYEES=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false], combine=true) - start
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=addresses, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.448 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.448 [main] DEBUG org.dbunit.operation.CompositeOperation - execute(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=null, , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.448 [main] DEBUG org.dbunit.operation.DeleteAllOperation - execute(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=null, dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.454 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
11:55:39.461 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createBatchStatement(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.462 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.462 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:39.505 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
11:55:39.505 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:h2:mem:testDB;DB_CLOSE_DELAY=-1]
11:55:39.508 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
11:55:39.509 [main] DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start
11:55:39.509 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
11:55:39.510 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:39.510 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
11:55:39.510 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:39.510 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
11:55:39.510 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:39.510 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=addresses) - start
11:55:39.511 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:39.511 [main] DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database...
11:55:39.511 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:39.536 [main] DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=H2
	database version=1.4.199 (2019-03-13)
	database major version=1
	database minor version=4
	jdbc driver name=H2 JDBC Driver
	jdbc driver version=1.4.199 (2019-03-13)
	jdbc driver major version=1
	jdbc driver minor version=4

11:55:39.536 [main] DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=rs16: org.h2.result.LocalResultImpl@74a85515 columns: 11 rows: 3 pos: -1
11:55:39.536 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}]) - start
11:55:39.536 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
11:55:39.536 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ADDRESSES, escapePattern=null) - start
11:55:39.536 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=ADDRESSES, object=null) - start
11:55:39.536 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:39.536 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:39.536 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:39.536 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:39.537 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}]) - start
11:55:39.537 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
11:55:39.537 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=DEPARTMENTS, escapePattern=null) - start
11:55:39.537 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=DEPARTMENTS, object=null) - start
11:55:39.537 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:39.537 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:39.537 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:39.537 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:39.537 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}]) - start
11:55:39.537 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
11:55:39.537 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=EMPLOYEES, escapePattern=null) - start
11:55:39.537 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=EMPLOYEES, object=null) - start
11:55:39.537 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - start
11:55:39.537 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - end - result=EMPLOYEES
11:55:39.537 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - start
11:55:39.537 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - end - result=EMPLOYEES
11:55:39.537 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.537 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.537 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.538 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.542 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:39.549 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=addresses (dbIdentifierQuoteString=")
11:55:39.551 [main] DEBUG org.dbunit.util.SQLHelper - class org.dbunit.database.DatabaseTableMetaData. Corrected table name: oldValue=addresses newValue=ADDRESSES
11:55:39.551 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'ADDRESSES' exists in schema 'null' ...
11:55:39.580 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=rs18: org.h2.result.LocalResultImpl@1d3d76b4 columns: 11 rows: 1 pos: 0) - start
11:55:39.581 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=addresses, object=table=ADDRESSES, cols=[(CITY, VARCHAR, nullable), (STREET, VARCHAR, nullable), (EMPLOYEE_ID, BIGINT, noNulls)], pk=[(EMPLOYEE_ID, BIGINT, noNulls)]) - start
11:55:39.656 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.656 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.656 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.656 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.656 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=ADDRESSES, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.656 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.656 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ADDRESSES, escapePattern=null) - start
11:55:39.657 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from ADDRESSES) - start
11:55:39.658 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from ADDRESSES
11:55:39.658 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=employees) - start
11:55:39.658 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:39.658 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.658 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.658 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.658 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.658 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:39.658 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=employees (dbIdentifierQuoteString=")
11:55:39.658 [main] DEBUG org.dbunit.util.SQLHelper - class org.dbunit.database.DatabaseTableMetaData. Corrected table name: oldValue=employees newValue=EMPLOYEES
11:55:39.658 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'EMPLOYEES' exists in schema 'null' ...
11:55:39.665 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=rs21: org.h2.result.LocalResultImpl@31f31b20 columns: 11 rows: 1 pos: 0) - start
11:55:39.665 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=employees, object=table=EMPLOYEES, cols=[(ID, BIGINT, noNulls), (NAME, VARCHAR, nullable), (PHONE, VARCHAR, nullable), (DEPARTMENT_ID, BIGINT, nullable)], pk=[(ID, BIGINT, noNulls)]) - start
11:55:39.700 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.700 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.700 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.700 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.700 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=EMPLOYEES, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.700 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.700 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=EMPLOYEES, escapePattern=null) - start
11:55:39.700 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from EMPLOYEES) - start
11:55:39.700 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from EMPLOYEES
11:55:39.700 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=departments) - start
11:55:39.700 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:39.700 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.701 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.701 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.701 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.701 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:39.701 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=departments (dbIdentifierQuoteString=")
11:55:39.701 [main] DEBUG org.dbunit.util.SQLHelper - class org.dbunit.database.DatabaseTableMetaData. Corrected table name: oldValue=departments newValue=DEPARTMENTS
11:55:39.701 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'DEPARTMENTS' exists in schema 'null' ...
11:55:39.705 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=rs24: org.h2.result.LocalResultImpl@44084713 columns: 11 rows: 1 pos: 0) - start
11:55:39.708 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=departments, object=table=DEPARTMENTS, cols=[(ID, BIGINT, noNulls), (NAME, VARCHAR, nullable)], pk=[(ID, BIGINT, noNulls)]) - start
11:55:39.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.749 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=DEPARTMENTS, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.749 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.749 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=DEPARTMENTS, escapePattern=null) - start
11:55:39.750 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from DEPARTMENTS) - start
11:55:39.750 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from DEPARTMENTS
11:55:39.750 [main] DEBUG org.dbunit.database.statement.SimpleStatement - executeBatch() - start
11:55:39.750 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from ADDRESSES
11:55:39.754 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from EMPLOYEES
11:55:39.754 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from DEPARTMENTS
11:55:39.755 [main] DEBUG org.dbunit.database.statement.SimpleStatement - clearBatch() - start
11:55:39.755 [main] DEBUG org.dbunit.database.statement.AbstractBatchStatement - close() - start
11:55:39.756 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - execute(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.756 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
11:55:39.756 [main] DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start
11:55:39.756 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:39.756 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:39.756 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
11:55:39.756 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.756 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.756 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
11:55:39.766 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:39.766 [main] DEBUG org.dbunit.operation.AbstractOperation - getOperationMetaData(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null], metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:39.773 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
11:55:39.773 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=departments) - start
11:55:39.773 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:39.773 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.773 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.774 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:39.774 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:39.774 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:39.774 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:39.774 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:39.774 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:39.774 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:39.774 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
11:55:39.774 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=0) - start
11:55:39.774 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
11:55:39.774 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.774 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.774 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
11:55:39.774 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:39.774 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
11:55:39.774 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.774 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.774 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
11:55:39.774 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:39.774 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=DEPARTMENTS, columns=[(ID, BIGINT, noNulls), (NAME, VARCHAR, nullable)], keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.775 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=DEPARTMENTS, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.775 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.775 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=DEPARTMENTS, escapePattern=null) - start
11:55:39.775 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=ID, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.775 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.775 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ID, escapePattern=null) - start
11:55:39.775 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=NAME, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.775 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.775 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=NAME, escapePattern=null) - start
11:55:39.776 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into DEPARTMENTS (ID, NAME) values (?, ?), connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.776 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.780 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:39.783 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=ID) - start
11:55:39.783 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.783 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.783 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=ID) - start
11:55:39.783 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=ID) - start
11:55:39.783 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=BIGINT) - start
11:55:39.783 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=BIGINT) - start
11:55:39.783 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - setSqlValue(value=1, column=1, statement=prep19: insert into DEPARTMENTS (ID, NAME) values (?, ?)) - start
11:55:39.783 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - typeCast(value=1) - start
11:55:39.784 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=NAME) - start
11:55:39.784 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.784 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.784 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=NAME) - start
11:55:39.784 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=NAME) - start
11:55:39.784 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=coast, dataType=VARCHAR) - start
11:55:39.784 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=coast, dataType=VARCHAR) - start
11:55:39.784 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=coast, column=2, statement=prep19: insert into DEPARTMENTS (ID, NAME) values (?, ?) {1: 1}) - start
11:55:39.784 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=coast) - start
11:55:39.784 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=coast) - start
11:55:39.784 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
11:55:39.784 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
11:55:39.786 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=1) - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=1) - start
11:55:39.786 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - executeBatch() - start
11:55:39.786 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - executeBatch() - start
11:55:39.786 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
11:55:39.786 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - clearBatch() - start
11:55:39.786 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
11:55:39.786 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - close() - start
11:55:39.786 [main] DEBUG org.dbunit.database.statement.AbstractPreparedBatchStatement - close() - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:39.786 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:39.786 [main] DEBUG org.dbunit.operation.AbstractOperation - getOperationMetaData(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null], metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:39.786 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
11:55:39.786 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=employees) - start
11:55:39.786 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.786 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:39.786 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:39.786 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:39.786 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:39.786 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=phone) - start
11:55:39.786 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:39.786 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=department_id) - start
11:55:39.786 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:39.786 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
11:55:39.786 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=0) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=phone) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=phone) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=phone) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=department_id) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=department_id) - start
11:55:39.787 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=department_id) - start
11:55:39.787 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=EMPLOYEES, columns=[(ID, BIGINT, noNulls), (NAME, VARCHAR, nullable), (PHONE, VARCHAR, nullable), (DEPARTMENT_ID, BIGINT, nullable)], keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.787 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=EMPLOYEES, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.787 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.787 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=EMPLOYEES, escapePattern=null) - start
11:55:39.787 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=ID, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.787 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.787 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ID, escapePattern=null) - start
11:55:39.787 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=NAME, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.787 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.787 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=NAME, escapePattern=null) - start
11:55:39.787 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=PHONE, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.787 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.787 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=PHONE, escapePattern=null) - start
11:55:39.787 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=DEPARTMENT_ID, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.788 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.788 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=DEPARTMENT_ID, escapePattern=null) - start
11:55:39.788 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into EMPLOYEES (ID, NAME, PHONE, DEPARTMENT_ID) values (?, ?, ?, ?), connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.788 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.788 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=ID) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=ID) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=ID) - start
11:55:39.788 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2, dataType=BIGINT) - start
11:55:39.788 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2, dataType=BIGINT) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - setSqlValue(value=2, column=1, statement=prep20: insert into EMPLOYEES (ID, NAME, PHONE, DEPARTMENT_ID) values (?, ?, ?, ?)) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - typeCast(value=2) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=NAME) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=NAME) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=NAME) - start
11:55:39.788 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Testy, dataType=VARCHAR) - start
11:55:39.788 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Testy, dataType=VARCHAR) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Testy, column=2, statement=prep20: insert into EMPLOYEES (ID, NAME, PHONE, DEPARTMENT_ID) values (?, ?, ?, ?) {1: 2}) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Testy) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Testy) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=PHONE) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=PHONE) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=PHONE) - start
11:55:39.788 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=123, dataType=VARCHAR) - start
11:55:39.788 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=123, dataType=VARCHAR) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=123, column=3, statement=prep20: insert into EMPLOYEES (ID, NAME, PHONE, DEPARTMENT_ID) values (?, ?, ?, ?) {1: 2, 2: 'Testy'}) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=123) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=123) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=DEPARTMENT_ID) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.788 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=DEPARTMENT_ID) - start
11:55:39.789 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=DEPARTMENT_ID) - start
11:55:39.789 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=BIGINT) - start
11:55:39.789 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=BIGINT) - start
11:55:39.789 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - setSqlValue(value=1, column=4, statement=prep20: insert into EMPLOYEES (ID, NAME, PHONE, DEPARTMENT_ID) values (?, ?, ?, ?) {1: 2, 2: 'Testy', 3: '123'}) - start
11:55:39.789 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - typeCast(value=1) - start
11:55:39.789 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
11:55:39.789 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
11:55:39.807 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=1) - start
11:55:39.809 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
11:55:39.809 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
11:55:39.809 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=1) - start
11:55:39.809 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - executeBatch() - start
11:55:39.809 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - executeBatch() - start
11:55:39.809 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
11:55:39.809 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - clearBatch() - start
11:55:39.809 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
11:55:39.809 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - close() - start
11:55:39.809 [main] DEBUG org.dbunit.database.statement.AbstractPreparedBatchStatement - close() - start
11:55:39.809 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:39.809 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:39.809 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=city) - start
11:55:39.809 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.809 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.809 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=city) - start
11:55:39.809 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=city) - start
11:55:39.810 [main] DEBUG org.dbunit.operation.AbstractOperation - getOperationMetaData(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null], metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:39.810 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
11:55:39.810 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=addresses) - start
11:55:39.810 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:39.810 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.810 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.810 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:39.810 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:39.810 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=city) - start
11:55:39.810 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:39.810 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:39.810 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=street) - start
11:55:39.810 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:39.810 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=employee_id) - start
11:55:39.810 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:39.810 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
11:55:39.810 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=0) - start
11:55:39.810 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=city) - start
11:55:39.810 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.810 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.810 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=city) - start
11:55:39.810 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=city) - start
11:55:39.810 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=street) - start
11:55:39.810 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.810 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.811 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=street) - start
11:55:39.811 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=street) - start
11:55:39.811 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=employee_id) - start
11:55:39.811 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.811 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.811 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=employee_id) - start
11:55:39.811 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=employee_id) - start
11:55:39.811 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=ADDRESSES, columns=[(CITY, VARCHAR, nullable), (STREET, VARCHAR, nullable), (EMPLOYEE_ID, BIGINT, noNulls)], keys=[(EMPLOYEE_ID, BIGINT, noNulls)], ignoreMapping={}, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.811 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=ADDRESSES, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.811 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.811 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ADDRESSES, escapePattern=null) - start
11:55:39.811 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=CITY, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.811 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.811 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=CITY, escapePattern=null) - start
11:55:39.811 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=STREET, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.811 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.811 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=STREET, escapePattern=null) - start
11:55:39.811 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=EMPLOYEE_ID, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.811 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:39.811 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=EMPLOYEE_ID, escapePattern=null) - start
11:55:39.811 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into ADDRESSES (CITY, STREET, EMPLOYEE_ID) values (?, ?, ?), connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.811 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1d944fc0, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:39.811 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=CITY) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=CITY) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=CITY) - start
11:55:39.812 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=asd, dataType=VARCHAR) - start
11:55:39.812 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=asd, dataType=VARCHAR) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=asd, column=1, statement=prep21: insert into ADDRESSES (CITY, STREET, EMPLOYEE_ID) values (?, ?, ?)) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=asd) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=asd) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=STREET) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=STREET) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=STREET) - start
11:55:39.812 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=fgh, dataType=VARCHAR) - start
11:55:39.812 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=fgh, dataType=VARCHAR) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=fgh, column=2, statement=prep21: insert into ADDRESSES (CITY, STREET, EMPLOYEE_ID) values (?, ?, ?) {1: 'asd'}) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=fgh) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=fgh) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=EMPLOYEE_ID) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=EMPLOYEE_ID) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=EMPLOYEE_ID) - start
11:55:39.812 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2, dataType=BIGINT) - start
11:55:39.812 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2, dataType=BIGINT) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - setSqlValue(value=2, column=3, statement=prep21: insert into ADDRESSES (CITY, STREET, EMPLOYEE_ID) values (?, ?, ?) {1: 'asd', 2: 'fgh'}) - start
11:55:39.812 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - typeCast(value=2) - start
11:55:39.813 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
11:55:39.813 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
11:55:39.813 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=1) - start
11:55:39.814 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=city) - start
11:55:39.814 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
11:55:39.814 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=1) - start
11:55:39.814 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - executeBatch() - start
11:55:39.814 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - executeBatch() - start
11:55:39.814 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
11:55:39.814 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - clearBatch() - start
11:55:39.814 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
11:55:39.814 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - close() - start
11:55:39.814 [main] DEBUG org.dbunit.database.statement.AbstractPreparedBatchStatement - close() - start
11:55:53.506 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=true, caseSensitiveTableNames=false, metaDataSet=null]
11:55:53.507 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=true, caseSensitiveTableNames=false, metaDataSet=null]
11:55:53.507 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
11:55:53.507 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
11:55:53.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
11:55:53.507 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
11:55:53.507 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
11:55:53.509 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@145fe8ab, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@3b347439) - start
11:55:53.509 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@145fe8ab, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@3b347439) - start
11:55:53.511 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5d3634c8) - start
11:55:53.511 [main] DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start
11:55:53.512 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=departments, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5d3634c8) - start
11:55:53.512 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.512 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=departments) - start
11:55:53.512 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.512 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.512 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=departments, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5d3634c8) - start
11:55:53.512 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)]) - start
11:55:53.512 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=departments, object=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.512 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.512 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.512 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:53.512 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:53.512 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.512 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.512 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.512 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:53.513 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:53.513 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.513 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.513 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.513 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=departments) - start
11:55:53.513 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=departments, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5d3634c8) - start
11:55:53.513 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.513 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.513 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.513 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=departments) - start
11:55:53.513 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.513 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.513 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.513 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.513 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.513 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.514 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.514 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.514 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:53.514 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:53.514 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.514 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.514 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.514 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=departments) - start
11:55:53.514 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=employees, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5d3634c8) - start
11:55:53.514 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.514 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.514 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.514 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=employees) - start
11:55:53.515 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.515 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.515 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.515 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.515 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.515 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.515 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.515 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=employees, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5d3634c8) - start
11:55:53.515 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)]) - start
11:55:53.515 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=employees, object=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.515 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.515 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.515 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - start
11:55:53.515 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - end - result=EMPLOYEES
11:55:53.515 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.515 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.516 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.516 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:53.516 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:53.516 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=phone) - start
11:55:53.516 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=department_id) - start
11:55:53.516 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.516 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.516 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.516 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=employees) - start
11:55:53.516 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=addresses, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5d3634c8) - start
11:55:53.517 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.517 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.517 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.517 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=addresses) - start
11:55:53.517 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.517 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.517 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.517 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.517 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.517 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.517 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.517 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=addresses, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5d3634c8) - start
11:55:53.517 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)]) - start
11:55:53.517 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=addresses, object=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.517 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.518 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:53.518 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.518 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=city) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=street) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=employee_id) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.518 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=addresses) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.518 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
11:55:53.518 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=departments, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:53.519 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=employees, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - end - result=EMPLOYEES
11:55:53.519 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=asd) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=asd) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=addresses, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:53.519 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start
11:55:53.519 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments, employees, addresses], _tableMap={EMPLOYEES=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], ADDRESSES=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]}, _caseSensitiveTableNames=false]
11:55:53.520 [main] DEBUG com.github.springtestdbunit.DbUnitTestExecutionListener - Veriftying @DatabaseTest expectation using initTestDB-addDep-expected.xml
11:55:53.520 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
11:55:53.531 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals(expectedDataSet=AbstractDataSet[_orderedTableNameMap=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments, employees, addresses], _tableMap={EMPLOYEES=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], ADDRESSES=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]}, _caseSensitiveTableNames=false]], actualDataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.531 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer(expectedDataSet=AbstractDataSet[_orderedTableNameMap=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments, employees, addresses], _tableMap={EMPLOYEES=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], ADDRESSES=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]}, _caseSensitiveTableNames=false]], actualDataSet=AbstractDataSet[_orderedTableNameMap=null], failureHandler=null, defaultValueComparer=null, tableColumnValueComparers=null) - start
11:55:53.532 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - FailureHandler is null. Using default implementation
11:55:53.534 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - getSortedTableNames(dataSet=AbstractDataSet[_orderedTableNameMap=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments, employees, addresses], _tableMap={EMPLOYEES=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], ADDRESSES=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]}, _caseSensitiveTableNames=false]]) - start
11:55:53.535 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTableNames() - start
11:55:53.535 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
11:55:53.535 [main] DEBUG org.dbunit.dataset.AbstractDataSet - The table name map has already been initialized.
11:55:53.535 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - getSortedTableNames(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.535 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:53.535 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - determineValidTableColumnValueComparers: using getDefaultTableColumnValueComparerMap()={} as tableColumnValueComparers=null
11:55:53.535 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTable(tableName=ADDRESSES) - start
11:55:53.535 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
11:55:53.535 [main] DEBUG org.dbunit.dataset.AbstractDataSet - The table name map has already been initialized.
11:55:53.535 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:53.535 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:53.535 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTable(tableName=ADDRESSES) - start
11:55:53.535 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:53.535 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=ADDRESSES) - start
11:55:53.535 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:53.535 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:53.535 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:53.535 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:53.535 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:53.537 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:53.537 [main] DEBUG org.dbunit.database.DatabaseConfig$Configurator - Statement fetch size set to 100
11:55:53.537 [main] DEBUG org.dbunit.database.DatabaseDataSet - getSelectStatement(schema=null, metaData=table=ADDRESSES, cols=[(CITY, VARCHAR, nullable), (STREET, VARCHAR, nullable), (EMPLOYEE_ID, BIGINT, noNulls)], pk=[(EMPLOYEE_ID, BIGINT, noNulls)], escapePattern=null) - start
11:55:53.537 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.537 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
11:55:53.537 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.537 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=CITY, escapePattern=null) - start
11:55:53.537 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.537 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=STREET, escapePattern=null) - start
11:55:53.537 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.537 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=EMPLOYEE_ID, escapePattern=null) - start
11:55:53.537 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.537 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ADDRESSES, escapePattern=null) - start
11:55:53.537 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.537 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=EMPLOYEE_ID, escapePattern=null) - start
11:55:53.537 [main] DEBUG org.dbunit.database.AbstractResultSetTable - Query: select CITY, STREET, EMPLOYEE_ID from ADDRESSES order by EMPLOYEE_ID
11:55:53.539 [main] DEBUG org.dbunit.dataset.DefaultTable - addTableRows(table=org.dbunit.database.ForwardOnlyResultSetTable[_metaData=[table=ADDRESSES, cols=[(CITY, VARCHAR, nullable), (STREET, VARCHAR, nullable), (EMPLOYEE_ID, BIGINT, noNulls)], pk=[(EMPLOYEE_ID, BIGINT, noNulls)]], _resultSet=[rs33: org.h2.result.LocalResultImpl@708f7386 columns: 3 rows: 1 pos: -1], _statement=[stat5]], org.dbunit.database.ForwardOnlyResultSetTable[_eot=[false], _lastRow=[-1]]) - start
11:55:53.539 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.539 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=CITY) - start
11:55:53.539 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=CITY) - start
11:55:53.539 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=CITY) - start
11:55:53.539 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.539 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=rs33: org.h2.result.LocalResultImpl@708f7386 columns: 3 rows: 1 pos: 0) - start
11:55:53.539 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=STREET) - start
11:55:53.539 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=STREET) - start
11:55:53.539 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=STREET) - start
11:55:53.539 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.539 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=rs33: org.h2.result.LocalResultImpl@708f7386 columns: 3 rows: 1 pos: 0) - start
11:55:53.539 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=EMPLOYEE_ID) - start
11:55:53.539 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=EMPLOYEE_ID) - start
11:55:53.539 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=EMPLOYEE_ID) - start
11:55:53.539 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.539 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - getSqlValue(column=3, resultSet=rs33: org.h2.result.LocalResultImpl@708f7386 columns: 3 rows: 1 pos: 0) - start
11:55:53.539 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=CITY) - start
11:55:53.540 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]
11:55:53.540 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=ADDRESSES, cols=[(CITY, VARCHAR, nullable), (STREET, VARCHAR, nullable), (EMPLOYEE_ID, BIGINT, noNulls)], pk=[(EMPLOYEE_ID, BIGINT, noNulls)], _rowList.size()=1]
11:55:53.540 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]
11:55:53.540 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: defaultValueComparer=null
11:55:53.540 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: columnValueComparers=null
11:55:53.540 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.540 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(street, UNKNOWN, nullableUnknown), o2=(city, UNKNOWN, nullableUnknown)) - start
11:55:53.540 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(employee_id, UNKNOWN, nullableUnknown), o2=(street, UNKNOWN, nullableUnknown)) - start
11:55:53.540 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(employee_id, UNKNOWN, nullableUnknown), o2=(street, UNKNOWN, nullableUnknown)) - start
11:55:53.540 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(employee_id, UNKNOWN, nullableUnknown), o2=(city, UNKNOWN, nullableUnknown)) - start
11:55:53.540 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=table=ADDRESSES, cols=[(CITY, VARCHAR, nullable), (STREET, VARCHAR, nullable), (EMPLOYEE_ID, BIGINT, noNulls)], pk=[(EMPLOYEE_ID, BIGINT, noNulls)]) - start
11:55:53.540 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.540 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(STREET, VARCHAR, nullable), o2=(CITY, VARCHAR, nullable)) - start
11:55:53.540 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(EMPLOYEE_ID, BIGINT, noNulls), o2=(STREET, VARCHAR, nullable)) - start
11:55:53.540 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(EMPLOYEE_ID, BIGINT, noNulls), o2=(STREET, VARCHAR, nullable)) - start
11:55:53.540 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(EMPLOYEE_ID, BIGINT, noNulls), o2=(CITY, VARCHAR, nullable)) - start
11:55:53.541 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.541 [main] DEBUG org.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], columnsToSearch=[(CITY, VARCHAR, nullable), (STREET, VARCHAR, nullable), (EMPLOYEE_ID, BIGINT, noNulls)])
11:55:53.541 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=CITY) - start
11:55:53.541 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=STREET) - start
11:55:53.541 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=EMPLOYEE_ID) - start
11:55:53.541 [main] DEBUG org.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=table=ADDRESSES, cols=[(CITY, VARCHAR, nullable), (STREET, VARCHAR, nullable), (EMPLOYEE_ID, BIGINT, noNulls)], pk=[(EMPLOYEE_ID, BIGINT, noNulls)], columnsToSearch=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)])
11:55:53.541 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=city) - start
11:55:53.541 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=street) - start
11:55:53.541 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=employee_id) - start
11:55:53.542 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=addresses, expectedColumn=(city, UNKNOWN, nullableUnknown), actualColumn=(CITY, VARCHAR, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
11:55:53.542 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=addresses, expectedColumn=(employee_id, UNKNOWN, nullableUnknown), actualColumn=(EMPLOYEE_ID, BIGINT, noNulls), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
11:55:53.542 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=addresses, expectedColumn=(street, UNKNOWN, nullableUnknown), actualColumn=(STREET, VARCHAR, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
11:55:53.542 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - compareData(expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=ADDRESSES, cols=[(CITY, VARCHAR, nullable), (STREET, VARCHAR, nullable), (EMPLOYEE_ID, BIGINT, noNulls)], pk=[(EMPLOYEE_ID, BIGINT, noNulls)], _rowList.size()=1], comparisonCols=[org.dbunit.assertion.DbUnitAssert$ComparisonColumn@37364634, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@3dec79f8, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@5bf7f15f], failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null], defaultValueComparer=null, columnValueComparers=null) - start
11:55:53.546 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - determineValidDefaultValueComparer: using getDefaultValueComparer()=org.dbunit.assertion.comparer.value.IsActualEqualToExpectedValueComparer as defaultValueComparer=null
11:55:53.547 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - determineValidColumnValueComparers: using getDefaultValueComparerMap()={} as columnValueComparers=null for tableName=addresses
11:55:53.547 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=city) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=city) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=city) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=city) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=city) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=city) - start
11:55:53.547 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - determineValueComparer: using defaultValueComparer='org.dbunit.assertion.comparer.value.IsActualEqualToExpectedValueComparer' as columnName='city' not found in columnValueComparers='{}'
11:55:53.547 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - compareData: comparing actualValue=asd to expectedValue=asd with valueComparer=org.dbunit.assertion.comparer.value.IsActualEqualToExpectedValueComparer
11:55:53.547 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=asd, o2=asd) - start
11:55:53.547 [main] DEBUG org.dbunit.assertion.comparer.value.IsActualEqualToExpectedValueComparer - compare: rowNum=0, columnName=city, expectedValue=asd, actualValue=asd, failMessage=null
11:55:53.547 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=employee_id) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=employee_id) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=employee_id) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=employee_id) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=employee_id) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=employee_id) - start
11:55:53.547 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - determineValueComparer: using defaultValueComparer='org.dbunit.assertion.comparer.value.IsActualEqualToExpectedValueComparer' as columnName='employee_id' not found in columnValueComparers='{}'
11:55:53.547 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - compareData: comparing actualValue=2 to expectedValue=2 with valueComparer=org.dbunit.assertion.comparer.value.IsActualEqualToExpectedValueComparer
11:55:53.547 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2, o2=2) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - typeCast(value=2) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - typeCast(value=2) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2, value2=2) - start
11:55:53.547 [main] DEBUG org.dbunit.assertion.comparer.value.IsActualEqualToExpectedValueComparer - compare: rowNum=0, columnName=employee_id, expectedValue=2, actualValue=2, failMessage=null
11:55:53.547 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=street) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=street) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=street) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=street) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=street) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=street) - start
11:55:53.547 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - determineValueComparer: using defaultValueComparer='org.dbunit.assertion.comparer.value.IsActualEqualToExpectedValueComparer' as columnName='street' not found in columnValueComparers='{}'
11:55:53.547 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - compareData: comparing actualValue=fgh to expectedValue=fgh with valueComparer=org.dbunit.assertion.comparer.value.IsActualEqualToExpectedValueComparer
11:55:53.547 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=fgh, o2=fgh) - start
11:55:53.547 [main] DEBUG org.dbunit.assertion.comparer.value.IsActualEqualToExpectedValueComparer - compare: rowNum=0, columnName=street, expectedValue=fgh, actualValue=fgh, failMessage=null
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTable(tableName=DEPARTMENTS) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.AbstractDataSet - The table name map has already been initialized.
11:55:53.547 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:53.547 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTable(tableName=DEPARTMENTS) - start
11:55:53.547 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:53.547 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=DEPARTMENTS) - start
11:55:53.547 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:53.547 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:53.547 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:53.547 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:53.548 [main] DEBUG org.dbunit.database.DatabaseConfig$Configurator - Statement fetch size set to 100
11:55:53.548 [main] DEBUG org.dbunit.database.DatabaseDataSet - getSelectStatement(schema=null, metaData=table=DEPARTMENTS, cols=[(ID, BIGINT, noNulls), (NAME, VARCHAR, nullable)], pk=[(ID, BIGINT, noNulls)], escapePattern=null) - start
11:55:53.548 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.548 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
11:55:53.548 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.548 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ID, escapePattern=null) - start
11:55:53.548 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.548 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=NAME, escapePattern=null) - start
11:55:53.548 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.548 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=DEPARTMENTS, escapePattern=null) - start
11:55:53.548 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.548 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ID, escapePattern=null) - start
11:55:53.548 [main] DEBUG org.dbunit.database.AbstractResultSetTable - Query: select ID, NAME from DEPARTMENTS order by ID
11:55:53.548 [main] DEBUG org.dbunit.dataset.DefaultTable - addTableRows(table=org.dbunit.database.ForwardOnlyResultSetTable[_metaData=[table=DEPARTMENTS, cols=[(ID, BIGINT, noNulls), (NAME, VARCHAR, nullable)], pk=[(ID, BIGINT, noNulls)]], _resultSet=[rs34: org.h2.result.LocalResultImpl@4cc89246 columns: 2 rows: 1 pos: -1], _statement=[stat6]], org.dbunit.database.ForwardOnlyResultSetTable[_eot=[false], _lastRow=[-1]]) - start
11:55:53.548 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.548 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=ID) - start
11:55:53.548 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=ID) - start
11:55:53.548 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=ID) - start
11:55:53.548 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.548 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - getSqlValue(column=1, resultSet=rs34: org.h2.result.LocalResultImpl@4cc89246 columns: 2 rows: 1 pos: 0) - start
11:55:53.548 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=NAME) - start
11:55:53.548 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=NAME) - start
11:55:53.548 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=NAME) - start
11:55:53.548 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.548 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=rs34: org.h2.result.LocalResultImpl@4cc89246 columns: 2 rows: 1 pos: 0) - start
11:55:53.548 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=ID) - start
11:55:53.549 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]
11:55:53.549 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=DEPARTMENTS, cols=[(ID, BIGINT, noNulls), (NAME, VARCHAR, nullable)], pk=[(ID, BIGINT, noNulls)], _rowList.size()=1]
11:55:53.549 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]
11:55:53.549 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: defaultValueComparer=null
11:55:53.549 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: columnValueComparers=null
11:55:53.550 [main] ERROR org.dbunit.assertion.DbUnitAssertBase - junit.framework.ComparisonFailure: row count (table=departments) expected:<[2]> but was:<[1]>
11:55:53.551 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - close() - start
11:55:53.553 [main] WARN org.springframework.test.context.TestContextManager - Caught exception while invoking 'afterTestMethod' callback on TestExecutionListener [com.github.springtestdbunit.DbUnitTestExecutionListener@5e82df6a] for test method [public void com.diana.integration.IntTest.test_goToNewDep_thenCreateDep_thenGoBack() throws java.lang.Exception] and test instance [com.diana.integration.IntTest@291ae]
junit.framework.ComparisonFailure: row count (table=departments) expected:<[2]> but was:<[1]>
	at org.dbunit.assertion.JUnitFailureFactory.createFailure(JUnitFailureFactory.java:39)
	at org.dbunit.assertion.DefaultFailureHandler.createFailure(DefaultFailureHandler.java:105)
	at org.dbunit.assertion.DbUnitAssertBase.compareRowCounts(DbUnitAssertBase.java:171)
	at org.dbunit.assertion.DbUnitAssertBase.assertWithValueComparer(DbUnitAssertBase.java:417)
	at org.dbunit.assertion.DbUnitAssertBase.compareTables(DbUnitAssertBase.java:346)
	at org.dbunit.assertion.DbUnitAssertBase.assertWithValueComparer(DbUnitAssertBase.java:321)
	at org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:199)
	at org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:186)
	at org.dbunit.Assertion.assertEquals(Assertion.java:119)
	at com.github.springtestdbunit.assertion.DefaultDatabaseAssertion.assertEquals(DefaultDatabaseAssertion.java:37)
	at com.github.springtestdbunit.DbUnitRunner.verifyExpected(DbUnitRunner.java:154)
	at com.github.springtestdbunit.DbUnitRunner.verifyExpected(DbUnitRunner.java:120)
	at com.github.springtestdbunit.DbUnitRunner.afterTestMethod(DbUnitRunner.java:86)
	at com.github.springtestdbunit.DbUnitTestExecutionListener.afterTestMethod(DbUnitTestExecutionListener.java:190)
	at org.springframework.test.context.TestContextManager.afterTestMethod(TestContextManager.java:443)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:94)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
11:55:53.554 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@243c4f91 testClass = IntTest, testInstance = com.diana.integration.IntTest@291ae, testMethod = test_goToNewDep_thenCreateDep_thenGoBack@IntTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['com.github.springtestdbunit.DbUnitTestExecutionListener.connection' -> com.github.springtestdbunit.DatabaseConnections@76220ef1, 'com.github.springtestdbunit.DbUnitTestExecutionListener.databseOperationLookup' -> com.github.springtestdbunit.operation.DefaultDatabaseOperationLookup@65ad2b42, 'com.github.springtestdbunit.DbUnitTestExecutionListener.dataSetLoader' -> com.github.springtestdbunit.dataset.FlatXmlDataSetLoader@294ebe11]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
]]></system-out>
    <system-err><![CDATA[Starting ChromeDriver 77.0.3865.40 (f484704e052e0b556f8030b65b953dce96503217-refs/branch-heads/3865@{#442}) on port 2518
Only local connections are allowed.
Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code.
[1571648143.849][WARNING]: Timed out connecting to Chrome, retrying...
окт. 21, 2019 11:55:45 AM org.openqa.selenium.remote.ProtocolHandshake createSession
INFO: Detected dialect: W3C
[1571648147.925][WARNING]: Timed out connecting to Chrome, retrying...
]]></system-err>
  </testcase>
  <testcase name="test_goToNewEmp_thenCreateEmp_thenGoBack" classname="com.diana.integration.IntTest" time="14.594">
    <failure message="row count (table=addresses) expected:&lt;[2]&gt; but was:&lt;[1]&gt;" type="junit.framework.ComparisonFailure"><![CDATA[junit.framework.ComparisonFailure: row count (table=addresses) expected:<[2]> but was:<[1]>
]]></failure>
    <system-out><![CDATA[11:55:53.558 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.diana.integration.IntTest]
11:55:53.558 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.diana.integration.IntTest]
11:55:53.558 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@243c4f91 testClass = IntTest, testInstance = com.diana.integration.IntTest@2cacb445, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['com.github.springtestdbunit.DbUnitTestExecutionListener.connection' -> com.github.springtestdbunit.DatabaseConnections@76220ef1, 'com.github.springtestdbunit.DbUnitTestExecutionListener.databseOperationLookup' -> com.github.springtestdbunit.operation.DefaultDatabaseOperationLookup@65ad2b42, 'com.github.springtestdbunit.DbUnitTestExecutionListener.dataSetLoader' -> com.github.springtestdbunit.dataset.FlatXmlDataSetLoader@294ebe11]]].
11:55:53.558 [main] DEBUG org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
11:55:53.558 [main] DEBUG org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@749baa0c size = 1, maxSize = 32, parentContextCount = 0, hitCount = 5, missCount = 1]
11:55:53.558 [main] DEBUG com.github.springtestdbunit.DbUnitTestExecutionListener - Preparing test instance class com.diana.integration.IntTest for DBUnit
11:55:53.558 [main] DEBUG org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
11:55:53.558 [main] DEBUG org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@749baa0c size = 1, maxSize = 32, parentContextCount = 0, hitCount = 6, missCount = 1]
11:55:53.558 [main] DEBUG org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
11:55:53.558 [main] DEBUG org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@749baa0c size = 1, maxSize = 32, parentContextCount = 0, hitCount = 7, missCount = 1]
11:55:53.558 [main] DEBUG org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
11:55:53.558 [main] DEBUG org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@749baa0c size = 1, maxSize = 32, parentContextCount = 0, hitCount = 8, missCount = 1]
11:55:53.558 [main] DEBUG com.github.springtestdbunit.DbUnitTestExecutionListener - DBUnit tests will run using databaseConnection "dataSource", datasets will be loaded using class com.github.springtestdbunit.dataset.FlatXmlDataSetLoader
11:55:53.558 [main] DEBUG org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
11:55:53.559 [main] DEBUG org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@749baa0c size = 1, maxSize = 32, parentContextCount = 0, hitCount = 9, missCount = 1]
11:55:53.559 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=true, caseSensitiveTableNames=false, metaDataSet=null]
11:55:53.559 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=true, caseSensitiveTableNames=false, metaDataSet=null]
11:55:53.559 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
11:55:53.559 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
11:55:53.559 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
11:55:53.559 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
11:55:53.559 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
11:55:53.560 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@1e7cfd49, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@3a8640f7) - start
11:55:53.560 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@1e7cfd49, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@3a8640f7) - start
11:55:53.560 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@ca10069) - start
11:55:53.560 [main] DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=departments, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@ca10069) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=departments) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.561 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=departments, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@ca10069) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)]) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=departments, object=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.561 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.561 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=departments) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=employees, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@ca10069) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=employees) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.561 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=employees, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@ca10069) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)]) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=employees, object=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - end - result=EMPLOYEES
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.561 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=phone) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=department_id) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.561 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=employees) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=addresses, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@ca10069) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=addresses) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.561 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=addresses, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@ca10069) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)]) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=addresses, object=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.561 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=city) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=street) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=employee_id) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.561 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=addresses) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.561 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.562 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=departments, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:53.562 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=employees, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - end - result=EMPLOYEES
11:55:53.562 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=asd) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=asd) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=addresses, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:53.562 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments, employees, addresses], _tableMap={EMPLOYEES=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], ADDRESSES=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
11:55:53.562 [main] DEBUG com.github.springtestdbunit.DbUnitTestExecutionListener - Executing Setup of @DatabaseTest using CLEAN_INSERT on [AbstractDataSet[_orderedTableNameMap=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments, employees, addresses], _tableMap={EMPLOYEES=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], ADDRESSES=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]]]
11:55:53.562 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.562 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[], _tableMap={}, _caseSensitiveTableNames=false], combine=true) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=departments, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:53.562 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments], _tableMap={DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false], combine=true) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=employees, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - end - result=EMPLOYEES
11:55:53.562 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.CompositeDataSet - addTable(newTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], tableList=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments, employees], _tableMap={EMPLOYEES=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false], combine=true) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=addresses, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.562 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.562 [main] DEBUG org.dbunit.operation.CompositeOperation - execute(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=null, , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.562 [main] DEBUG org.dbunit.operation.DeleteAllOperation - execute(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=null, dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.562 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
11:55:53.562 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createBatchStatement(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.563 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.563 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:53.563 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
11:55:53.563 [main] DEBUG org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:h2:mem:testDB;DB_CLOSE_DELAY=-1]
11:55:53.563 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
11:55:53.563 [main] DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start
11:55:53.563 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
11:55:53.563 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:53.563 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
11:55:53.563 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:53.563 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
11:55:53.563 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:53.563 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=addresses) - start
11:55:53.563 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:53.563 [main] DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database...
11:55:53.563 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:53.565 [main] DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=H2
	database version=1.4.199 (2019-03-13)
	database major version=1
	database minor version=4
	jdbc driver name=H2 JDBC Driver
	jdbc driver version=1.4.199 (2019-03-13)
	jdbc driver major version=1
	jdbc driver minor version=4

11:55:53.565 [main] DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=rs35: org.h2.result.LocalResultImpl@5cb8580 columns: 11 rows: 3 pos: -1
11:55:53.565 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}]) - start
11:55:53.565 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
11:55:53.565 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ADDRESSES, escapePattern=null) - start
11:55:53.565 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=ADDRESSES, object=null) - start
11:55:53.565 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:53.565 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:53.565 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:55:53.565 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:55:53.565 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}]) - start
11:55:53.566 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
11:55:53.566 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=DEPARTMENTS, escapePattern=null) - start
11:55:53.566 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=DEPARTMENTS, object=null) - start
11:55:53.566 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:53.566 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:53.566 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:55:53.566 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:55:53.566 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}]) - start
11:55:53.566 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
11:55:53.566 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=EMPLOYEES, escapePattern=null) - start
11:55:53.566 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=EMPLOYEES, object=null) - start
11:55:53.566 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - start
11:55:53.566 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - end - result=EMPLOYEES
11:55:53.566 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - start
11:55:53.566 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - end - result=EMPLOYEES
11:55:53.567 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.567 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.567 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.567 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.567 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:53.567 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=addresses (dbIdentifierQuoteString=")
11:55:53.568 [main] DEBUG org.dbunit.util.SQLHelper - class org.dbunit.database.DatabaseTableMetaData. Corrected table name: oldValue=addresses newValue=ADDRESSES
11:55:53.568 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'ADDRESSES' exists in schema 'null' ...
11:55:53.571 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=rs37: org.h2.result.LocalResultImpl@54a6ef6 columns: 11 rows: 1 pos: 0) - start
11:55:53.571 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=addresses, object=table=ADDRESSES, cols=[(CITY, VARCHAR, nullable), (STREET, VARCHAR, nullable), (EMPLOYEE_ID, BIGINT, noNulls)], pk=[(EMPLOYEE_ID, BIGINT, noNulls)]) - start
11:55:53.581 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.581 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.581 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.581 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.581 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=ADDRESSES, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.581 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.581 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ADDRESSES, escapePattern=null) - start
11:55:53.581 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from ADDRESSES) - start
11:55:53.581 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from ADDRESSES
11:55:53.581 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=employees) - start
11:55:53.581 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:53.581 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.581 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.581 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.581 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.581 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:53.581 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=employees (dbIdentifierQuoteString=")
11:55:53.581 [main] DEBUG org.dbunit.util.SQLHelper - class org.dbunit.database.DatabaseTableMetaData. Corrected table name: oldValue=employees newValue=EMPLOYEES
11:55:53.581 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'EMPLOYEES' exists in schema 'null' ...
11:55:53.583 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=rs40: org.h2.result.LocalResultImpl@405603b6 columns: 11 rows: 1 pos: 0) - start
11:55:53.584 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=employees, object=table=EMPLOYEES, cols=[(ID, BIGINT, noNulls), (NAME, VARCHAR, nullable), (PHONE, VARCHAR, nullable), (DEPARTMENT_ID, BIGINT, nullable)], pk=[(ID, BIGINT, noNulls)]) - start
11:55:53.590 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.590 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.590 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.590 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.590 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=EMPLOYEES, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.590 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.591 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=EMPLOYEES, escapePattern=null) - start
11:55:53.591 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from EMPLOYEES) - start
11:55:53.591 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from EMPLOYEES
11:55:53.591 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=departments) - start
11:55:53.591 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:53.591 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.591 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.591 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.591 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.591 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:53.591 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=departments (dbIdentifierQuoteString=")
11:55:53.591 [main] DEBUG org.dbunit.util.SQLHelper - class org.dbunit.database.DatabaseTableMetaData. Corrected table name: oldValue=departments newValue=DEPARTMENTS
11:55:53.591 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'DEPARTMENTS' exists in schema 'null' ...
11:55:53.593 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=rs43: org.h2.result.LocalResultImpl@2f61de04 columns: 11 rows: 1 pos: 0) - start
11:55:53.593 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=departments, object=table=DEPARTMENTS, cols=[(ID, BIGINT, noNulls), (NAME, VARCHAR, nullable)], pk=[(ID, BIGINT, noNulls)]) - start
11:55:53.601 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.601 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.601 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.601 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.601 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=DEPARTMENTS, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.601 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.601 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=DEPARTMENTS, escapePattern=null) - start
11:55:53.601 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from DEPARTMENTS) - start
11:55:53.601 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from DEPARTMENTS
11:55:53.601 [main] DEBUG org.dbunit.database.statement.SimpleStatement - executeBatch() - start
11:55:53.601 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from ADDRESSES
11:55:53.602 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from EMPLOYEES
11:55:53.603 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from DEPARTMENTS
11:55:53.604 [main] DEBUG org.dbunit.database.statement.SimpleStatement - clearBatch() - start
11:55:53.604 [main] DEBUG org.dbunit.database.statement.AbstractBatchStatement - close() - start
11:55:53.604 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - execute(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.CompositeDataSet - createIterator(reversed=false) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:53.604 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:53.604 [main] DEBUG org.dbunit.operation.AbstractOperation - getOperationMetaData(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null], metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.604 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
11:55:53.604 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=departments) - start
11:55:53.604 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.604 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:53.604 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.604 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:53.604 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.604 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
11:55:53.604 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=0) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
11:55:53.604 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:53.604 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=DEPARTMENTS, columns=[(ID, BIGINT, noNulls), (NAME, VARCHAR, nullable)], keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.604 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=DEPARTMENTS, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.604 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.604 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=DEPARTMENTS, escapePattern=null) - start
11:55:53.604 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=ID, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.604 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.604 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ID, escapePattern=null) - start
11:55:53.604 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=NAME, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.604 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.604 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=NAME, escapePattern=null) - start
11:55:53.604 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into DEPARTMENTS (ID, NAME) values (?, ?), connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.604 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.604 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=ID) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=ID) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=ID) - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=BIGINT) - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=BIGINT) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - setSqlValue(value=1, column=1, statement=prep33: insert into DEPARTMENTS (ID, NAME) values (?, ?)) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - typeCast(value=1) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=NAME) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=NAME) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=NAME) - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=coast, dataType=VARCHAR) - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=coast, dataType=VARCHAR) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=coast, column=2, statement=prep33: insert into DEPARTMENTS (ID, NAME) values (?, ?) {1: 1}) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=coast) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=coast) - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
11:55:53.605 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=1) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=1) - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - executeBatch() - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - executeBatch() - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - clearBatch() - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - close() - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.AbstractPreparedBatchStatement - close() - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:53.605 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:53.605 [main] DEBUG org.dbunit.operation.AbstractOperation - getOperationMetaData(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null], metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.605 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
11:55:53.605 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=employees) - start
11:55:53.605 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.605 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:53.605 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.605 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:53.605 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=phone) - start
11:55:53.605 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=department_id) - start
11:55:53.605 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.605 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
11:55:53.605 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=0) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=phone) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=phone) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=phone) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=department_id) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=department_id) - start
11:55:53.605 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=department_id) - start
11:55:53.605 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=EMPLOYEES, columns=[(ID, BIGINT, noNulls), (NAME, VARCHAR, nullable), (PHONE, VARCHAR, nullable), (DEPARTMENT_ID, BIGINT, nullable)], keys=[(ID, BIGINT, noNulls)], ignoreMapping={}, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.605 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=EMPLOYEES, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.605 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.605 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=EMPLOYEES, escapePattern=null) - start
11:55:53.605 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=ID, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.605 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.605 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ID, escapePattern=null) - start
11:55:53.605 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=NAME, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.605 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.605 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=NAME, escapePattern=null) - start
11:55:53.605 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=PHONE, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.605 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.605 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=PHONE, escapePattern=null) - start
11:55:53.605 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=DEPARTMENT_ID, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.605 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.605 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=DEPARTMENT_ID, escapePattern=null) - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into EMPLOYEES (ID, NAME, PHONE, DEPARTMENT_ID) values (?, ?, ?, ?), connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.605 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.605 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=ID) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=ID) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=ID) - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2, dataType=BIGINT) - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2, dataType=BIGINT) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - setSqlValue(value=2, column=1, statement=prep34: insert into EMPLOYEES (ID, NAME, PHONE, DEPARTMENT_ID) values (?, ?, ?, ?)) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - typeCast(value=2) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=NAME) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=NAME) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=NAME) - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Testy, dataType=VARCHAR) - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Testy, dataType=VARCHAR) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Testy, column=2, statement=prep34: insert into EMPLOYEES (ID, NAME, PHONE, DEPARTMENT_ID) values (?, ?, ?, ?) {1: 2}) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Testy) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Testy) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=PHONE) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=PHONE) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=PHONE) - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=123, dataType=VARCHAR) - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=123, dataType=VARCHAR) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=123, column=3, statement=prep34: insert into EMPLOYEES (ID, NAME, PHONE, DEPARTMENT_ID) values (?, ?, ?, ?) {1: 2, 2: 'Testy'}) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=123) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=123) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=DEPARTMENT_ID) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=DEPARTMENT_ID) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=DEPARTMENT_ID) - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=BIGINT) - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=BIGINT) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - setSqlValue(value=1, column=4, statement=prep34: insert into EMPLOYEES (ID, NAME, PHONE, DEPARTMENT_ID) values (?, ?, ?, ?) {1: 2, 2: 'Testy', 3: '123'}) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - typeCast(value=1) - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
11:55:53.606 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=1) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=1) - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - executeBatch() - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - executeBatch() - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - clearBatch() - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - close() - start
11:55:53.606 [main] DEBUG org.dbunit.database.statement.AbstractPreparedBatchStatement - close() - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
11:55:53.606 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=city) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=city) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=city) - start
11:55:53.606 [main] DEBUG org.dbunit.operation.AbstractOperation - getOperationMetaData(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null], metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:55:53.606 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
11:55:53.606 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=addresses) - start
11:55:53.606 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.606 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:55:53.606 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=city) - start
11:55:53.607 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.607 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=street) - start
11:55:53.607 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=employee_id) - start
11:55:53.607 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:55:53.607 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
11:55:53.607 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=0) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=city) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=city) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=city) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=street) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=street) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=street) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=employee_id) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=employee_id) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=employee_id) - start
11:55:53.607 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=ADDRESSES, columns=[(CITY, VARCHAR, nullable), (STREET, VARCHAR, nullable), (EMPLOYEE_ID, BIGINT, noNulls)], keys=[(EMPLOYEE_ID, BIGINT, noNulls)], ignoreMapping={}, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.607 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=ADDRESSES, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.607 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.607 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ADDRESSES, escapePattern=null) - start
11:55:53.607 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=CITY, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.607 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.607 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=CITY, escapePattern=null) - start
11:55:53.607 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=STREET, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.607 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.607 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=STREET, escapePattern=null) - start
11:55:53.607 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=EMPLOYEE_ID, connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.607 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:55:53.607 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=EMPLOYEE_ID, escapePattern=null) - start
11:55:53.607 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into ADDRESSES (CITY, STREET, EMPLOYEE_ID) values (?, ?, ?), connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.607 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@29090809, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@30cafd13, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/features/allowEmptyFields=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@1d226f27], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@2168def, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@7c3c453b, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/allowVerifytabledefinitionExpectedtableCountMismatch=false}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:55:53.607 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=CITY) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=CITY) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=CITY) - start
11:55:53.607 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=asd, dataType=VARCHAR) - start
11:55:53.607 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=asd, dataType=VARCHAR) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=asd, column=1, statement=prep35: insert into ADDRESSES (CITY, STREET, EMPLOYEE_ID) values (?, ?, ?)) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=asd) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=asd) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=STREET) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=STREET) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=STREET) - start
11:55:53.607 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=fgh, dataType=VARCHAR) - start
11:55:53.607 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=fgh, dataType=VARCHAR) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=fgh, column=2, statement=prep35: insert into ADDRESSES (CITY, STREET, EMPLOYEE_ID) values (?, ?, ?) {1: 'asd'}) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=fgh) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=fgh) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=EMPLOYEE_ID) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=EMPLOYEE_ID) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=EMPLOYEE_ID) - start
11:55:53.607 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2, dataType=BIGINT) - start
11:55:53.607 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2, dataType=BIGINT) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - setSqlValue(value=2, column=3, statement=prep35: insert into ADDRESSES (CITY, STREET, EMPLOYEE_ID) values (?, ?, ?) {1: 'asd', 2: 'fgh'}) - start
11:55:53.607 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - typeCast(value=2) - start
11:55:53.607 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
11:55:53.607 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
11:55:53.608 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=1) - start
11:55:53.608 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=city) - start
11:55:53.608 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
11:55:53.608 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=1) - start
11:55:53.608 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - executeBatch() - start
11:55:53.608 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - executeBatch() - start
11:55:53.608 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
11:55:53.608 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - clearBatch() - start
11:55:53.608 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
11:55:53.608 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - close() - start
11:55:53.608 [main] DEBUG org.dbunit.database.statement.AbstractPreparedBatchStatement - close() - start
[object Object]
11:56:08.165 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=true, caseSensitiveTableNames=false, metaDataSet=null]
11:56:08.166 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=true, caseSensitiveTableNames=false, metaDataSet=null]
11:56:08.166 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
11:56:08.166 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
11:56:08.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
11:56:08.166 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
11:56:08.166 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
11:56:08.168 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@59c862af, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@4bb9f7d4) - start
11:56:08.168 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@59c862af, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@4bb9f7d4) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@673a9db4) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=departments, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@673a9db4) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=departments) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:56:08.169 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=departments, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@673a9db4) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)]) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=departments, object=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[]) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:56:08.169 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:56:08.169 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=departments) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=employees, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@673a9db4) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=employees) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:56:08.169 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=employees, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@673a9db4) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)]) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=employees, object=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - end - result=EMPLOYEES
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:56:08.169 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=phone) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=department_id) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:56:08.169 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=employees) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=employees, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@673a9db4) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=employees) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:56:08.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:56:08.170 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=phone) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=department_id) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:56:08.170 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=employees) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=addresses, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@673a9db4) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:56:08.170 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=addresses, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@673a9db4) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)]) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=addresses, object=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:56:08.170 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=city) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=street) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=employee_id) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:56:08.170 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=addresses, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@673a9db4) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:56:08.170 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=city) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=street) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=employee_id) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:56:08.170 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:56:08.170 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[]) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:56:08.170 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=departments, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=departments) - end - result=DEPARTMENTS
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=DEPARTMENTS) - end - result=DEPARTMENTS
11:56:08.171 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=employees, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=employees) - end - result=EMPLOYEES
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EMPLOYEES) - end - result=EMPLOYEES
11:56:08.171 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[]) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=asd) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=asd) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=asd) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=asd) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=addresses, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=addresses) - end - result=ADDRESSES
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:56:08.171 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments, employees, addresses], _tableMap={EMPLOYEES=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], ADDRESSES=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
11:56:08.171 [main] DEBUG com.github.springtestdbunit.DbUnitTestExecutionListener - Veriftying @DatabaseTest expectation using initTestDB-addEmp-expected.xml
11:56:08.171 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
11:56:08.171 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals(expectedDataSet=AbstractDataSet[_orderedTableNameMap=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments, employees, addresses], _tableMap={EMPLOYEES=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], ADDRESSES=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]], actualDataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:56:08.171 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer(expectedDataSet=AbstractDataSet[_orderedTableNameMap=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments, employees, addresses], _tableMap={EMPLOYEES=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], ADDRESSES=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]], actualDataSet=AbstractDataSet[_orderedTableNameMap=null], failureHandler=null, defaultValueComparer=null, tableColumnValueComparers=null) - start
11:56:08.171 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - FailureHandler is null. Using default implementation
11:56:08.171 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - getSortedTableNames(dataSet=AbstractDataSet[_orderedTableNameMap=org.dbunit.dataset.OrderedTableNameMap[_tableNames=[departments, employees, addresses], _tableMap={EMPLOYEES=org.dbunit.dataset.DefaultTable[_metaData=tableName=employees, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (phone, UNKNOWN, nullableUnknown), (department_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], ADDRESSES=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], DEPARTMENTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=departments, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]]) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTableNames() - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.AbstractDataSet - The table name map has already been initialized.
11:56:08.171 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - getSortedTableNames(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
11:56:08.171 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:56:08.171 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - determineValidTableColumnValueComparers: using getDefaultTableColumnValueComparerMap()={} as tableColumnValueComparers=null
11:56:08.171 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTable(tableName=ADDRESSES) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.AbstractDataSet - The table name map has already been initialized.
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:56:08.171 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTable(tableName=ADDRESSES) - start
11:56:08.171 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:56:08.171 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=ADDRESSES) - start
11:56:08.171 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - start
11:56:08.171 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ADDRESSES) - end - result=ADDRESSES
11:56:08.171 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - getConnection() - start
11:56:08.172 [main] DEBUG org.dbunit.database.DatabaseConfig$Configurator - Statement fetch size set to 100
11:56:08.172 [main] DEBUG org.dbunit.database.DatabaseDataSet - getSelectStatement(schema=null, metaData=table=ADDRESSES, cols=[(CITY, VARCHAR, nullable), (STREET, VARCHAR, nullable), (EMPLOYEE_ID, BIGINT, noNulls)], pk=[(EMPLOYEE_ID, BIGINT, noNulls)], escapePattern=null) - start
11:56:08.172 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:56:08.172 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
11:56:08.172 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:56:08.172 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=CITY, escapePattern=null) - start
11:56:08.172 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:56:08.172 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=STREET, escapePattern=null) - start
11:56:08.172 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:56:08.172 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=EMPLOYEE_ID, escapePattern=null) - start
11:56:08.172 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:56:08.172 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ADDRESSES, escapePattern=null) - start
11:56:08.172 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
11:56:08.172 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=EMPLOYEE_ID, escapePattern=null) - start
11:56:08.172 [main] DEBUG org.dbunit.database.AbstractResultSetTable - Query: select CITY, STREET, EMPLOYEE_ID from ADDRESSES order by EMPLOYEE_ID
11:56:08.172 [main] DEBUG org.dbunit.dataset.DefaultTable - addTableRows(table=org.dbunit.database.ForwardOnlyResultSetTable[_metaData=[table=ADDRESSES, cols=[(CITY, VARCHAR, nullable), (STREET, VARCHAR, nullable), (EMPLOYEE_ID, BIGINT, noNulls)], pk=[(EMPLOYEE_ID, BIGINT, noNulls)]], _resultSet=[rs52: org.h2.result.LocalResultImpl@44106e25 columns: 3 rows: 1 pos: -1], _statement=[stat8]], org.dbunit.database.ForwardOnlyResultSetTable[_eot=[false], _lastRow=[-1]]) - start
11:56:08.172 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:56:08.172 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=CITY) - start
11:56:08.172 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=CITY) - start
11:56:08.172 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=CITY) - start
11:56:08.172 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:56:08.172 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=rs52: org.h2.result.LocalResultImpl@44106e25 columns: 3 rows: 1 pos: 0) - start
11:56:08.172 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=STREET) - start
11:56:08.172 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=STREET) - start
11:56:08.172 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=STREET) - start
11:56:08.172 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:56:08.172 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=rs52: org.h2.result.LocalResultImpl@44106e25 columns: 3 rows: 1 pos: 0) - start
11:56:08.172 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=EMPLOYEE_ID) - start
11:56:08.172 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=EMPLOYEE_ID) - start
11:56:08.172 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=EMPLOYEE_ID) - start
11:56:08.172 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
11:56:08.172 [main] DEBUG org.dbunit.dataset.datatype.BigIntegerDataType - getSqlValue(column=3, resultSet=rs52: org.h2.result.LocalResultImpl@44106e25 columns: 3 rows: 1 pos: 0) - start
11:56:08.172 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=CITY) - start
11:56:08.172 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=addresses, columns=[(city, UNKNOWN, nullableUnknown), (street, UNKNOWN, nullableUnknown), (employee_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]
11:56:08.172 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=ADDRESSES, cols=[(CITY, VARCHAR, nullable), (STREET, VARCHAR, nullable), (EMPLOYEE_ID, BIGINT, noNulls)], pk=[(EMPLOYEE_ID, BIGINT, noNulls)], _rowList.size()=1]
11:56:08.172 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]
11:56:08.172 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: defaultValueComparer=null
11:56:08.172 [main] DEBUG org.dbunit.assertion.DbUnitAssertBase - assertWithValueComparer: columnValueComparers=null
11:56:08.172 [main] ERROR org.dbunit.assertion.DbUnitAssertBase - junit.framework.ComparisonFailure: row count (table=addresses) expected:<[2]> but was:<[1]>
11:56:08.173 [main] DEBUG org.dbunit.database.DatabaseDataSourceConnection - close() - start
11:56:08.173 [main] WARN org.springframework.test.context.TestContextManager - Caught exception while invoking 'afterTestMethod' callback on TestExecutionListener [com.github.springtestdbunit.DbUnitTestExecutionListener@5e82df6a] for test method [public void com.diana.integration.IntTest.test_goToNewEmp_thenCreateEmp_thenGoBack() throws java.lang.Exception] and test instance [com.diana.integration.IntTest@2cacb445]
junit.framework.ComparisonFailure: row count (table=addresses) expected:<[2]> but was:<[1]>
	at org.dbunit.assertion.JUnitFailureFactory.createFailure(JUnitFailureFactory.java:39)
	at org.dbunit.assertion.DefaultFailureHandler.createFailure(DefaultFailureHandler.java:105)
	at org.dbunit.assertion.DbUnitAssertBase.compareRowCounts(DbUnitAssertBase.java:171)
	at org.dbunit.assertion.DbUnitAssertBase.assertWithValueComparer(DbUnitAssertBase.java:417)
	at org.dbunit.assertion.DbUnitAssertBase.compareTables(DbUnitAssertBase.java:346)
	at org.dbunit.assertion.DbUnitAssertBase.assertWithValueComparer(DbUnitAssertBase.java:321)
	at org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:199)
	at org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:186)
	at org.dbunit.Assertion.assertEquals(Assertion.java:119)
	at com.github.springtestdbunit.assertion.DefaultDatabaseAssertion.assertEquals(DefaultDatabaseAssertion.java:37)
	at com.github.springtestdbunit.DbUnitRunner.verifyExpected(DbUnitRunner.java:154)
	at com.github.springtestdbunit.DbUnitRunner.verifyExpected(DbUnitRunner.java:120)
	at com.github.springtestdbunit.DbUnitRunner.afterTestMethod(DbUnitRunner.java:86)
	at com.github.springtestdbunit.DbUnitTestExecutionListener.afterTestMethod(DbUnitTestExecutionListener.java:190)
	at org.springframework.test.context.TestContextManager.afterTestMethod(TestContextManager.java:443)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:94)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
11:56:08.173 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@243c4f91 testClass = IntTest, testInstance = com.diana.integration.IntTest@2cacb445, testMethod = test_goToNewEmp_thenCreateEmp_thenGoBack@IntTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@61df66b6 testClass = IntTest, locations = '{}', classes = '{class com.diana.config.IntTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['com.github.springtestdbunit.DbUnitTestExecutionListener.connection' -> com.github.springtestdbunit.DatabaseConnections@57a5b03, 'com.github.springtestdbunit.DbUnitTestExecutionListener.databseOperationLookup' -> com.github.springtestdbunit.operation.DefaultDatabaseOperationLookup@5649f55, 'com.github.springtestdbunit.DbUnitTestExecutionListener.dataSetLoader' -> com.github.springtestdbunit.dataset.FlatXmlDataSetLoader@558127d2]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
]]></system-out>
    <system-err><![CDATA[Starting ChromeDriver 77.0.3865.40 (f484704e052e0b556f8030b65b953dce96503217-refs/branch-heads/3865@{#442}) on port 45872
Only local connections are allowed.
Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code.
[1571648156.629][WARNING]: Timed out connecting to Chrome, retrying...
окт. 21, 2019 11:55:58 AM org.openqa.selenium.remote.ProtocolHandshake createSession
INFO: Detected dialect: W3C
[1571648160.657][WARNING]: Timed out connecting to Chrome, retrying...
]]></system-err>
  </testcase>
  <testcase name="testEmployeeRender" classname="com.diana.integration.IntTest" time="12.323"/>
</testsuite>